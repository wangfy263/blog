{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/uploads/avatar.jpg","path":"uploads/avatar.jpg","modified":0,"renderable":0},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","path":"lib/canvas-ribbon/canvas-ribbon.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","path":"lib/needsharebutton/needsharebutton.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","path":"lib/pace/pace-theme-barber-shop.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","path":"lib/pace/pace-theme-big-counter.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","path":"lib/pace/pace-theme-bounce.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","path":"lib/pace/pace-theme-center-atom.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","path":"lib/pace/pace-theme-center-circle.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","path":"lib/pace/pace-theme-center-radar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","path":"lib/needsharebutton/needsharebutton.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","path":"lib/pace/pace-theme-fill-left.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","path":"lib/pace/pace-theme-center-simple.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","path":"lib/pace/pace-theme-corner-indicator.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","path":"lib/pace/pace-theme-flash.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","path":"lib/pace/pace-theme-minimal.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","path":"lib/needsharebutton/font-embedded.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","path":"lib/three/canvas_lines.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","path":"lib/pace/pace-theme-loading-bar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/three-waves.min.js","path":"lib/three/three-waves.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","path":"lib/pace/pace-theme-mac-osx.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","path":"lib/three/canvas_sphere.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace.min.js","path":"lib/pace/pace.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.js","path":"lib/Han/dist/han.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.css","path":"lib/Han/dist/han.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.css","path":"lib/Han/dist/han.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.js","path":"lib/Han/dist/han.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","path":"lib/Han/dist/font/han.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","path":"lib/Han/dist/font/han.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","path":"lib/Han/dist/font/han.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","path":"lib/Han/dist/font/han-space.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","path":"lib/Han/dist/font/han-space.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/three.min.js","path":"lib/three/three.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":0,"renderable":1}],"Cache":[{"_id":"themes/next/.editorconfig","hash":"211d2c92bfdddb3e81ea946f4ca7a539f150f4da","modified":1526970279242},{"_id":"themes/next/.bowerrc","hash":"334da94ca6f024d60d012cc26ea655681e724ad8","modified":1526970279241},{"_id":"themes/next/.gitignore","hash":"ee0b13c268cc8695d3883a5da84930af02d4ed08","modified":1526970279249},{"_id":"themes/next/.gitattributes","hash":"8454b9313cb1a97b63fb87e2d29daee497ce6249","modified":1526970279244},{"_id":"themes/next/.hound.yml","hash":"289dcf5bfe92dbd680d54d6e0668f41c9c9c0c78","modified":1526970279250},{"_id":"themes/next/.jshintrc","hash":"b7d23f2ce8d99fa073f22f9960605f318acd7710","modified":1526970279252},{"_id":"themes/next/README.cn.md","hash":"23e92a2599725db2f8dbd524fbef2087c6d11c7b","modified":1526970279255},{"_id":"themes/next/LICENSE","hash":"ec44503d7e617144909e54533754f0147845f0c5","modified":1526970279254},{"_id":"themes/next/.travis.yml","hash":"6674fbdfe0d0c03b8a04527ffb8ab66a94253acd","modified":1526970279253},{"_id":"themes/next/.stylintrc","hash":"3b7f9785e9ad0dab764e1c535b40df02f4ff5fd6","modified":1526970279252},{"_id":"themes/next/gulpfile.coffee","hash":"412defab3d93d404b7c26aaa0279e2e586e97454","modified":1526970279259},{"_id":"themes/next/package.json","hash":"3963ad558a24c78a3fd4ef23cf5f73f421854627","modified":1526970279373},{"_id":"themes/next/bower.json","hash":"486ebd72068848c97def75f36b71cbec9bb359c5","modified":1526970279258},{"_id":"source/_posts/基于vue的埋点方案.md","hash":"c83935dbeb3d5497565fbed690ed5e4188dbd5e5","modified":1525656736535},{"_id":"source/_posts/基于vue的管理系统权限管控方案.md","hash":"fb366a5afbbf00bff3ef715fea7ee8de73a76c03","modified":1527767396687},{"_id":"themes/next/README.md","hash":"50abff86ffe4113051a409c1ed9261195d2aead0","modified":1526970279256},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"5adfad3ef1b870063e621bc0838268eb2c7c697a","modified":1526970279245},{"_id":"themes/next/_config.yml","hash":"57081dfc3502a2c111d129d37d9799174c1ddc0c","modified":1526971262845},{"_id":"source/_posts/可视化编辑系统实践.md","hash":"cb1ce0b4d700cf11a564ba9af2beece9da409e1b","modified":1528028838070},{"_id":"source/uploads/avatar.jpg","hash":"6a95b7a5c59314de4dfbc371998151842af48ad5","modified":1466995710468},{"_id":"themes/next/.github/browserstack_logo.png","hash":"a6c43887f64a7f48a2814e3714eaa1215e542037","modified":1526970279248},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"1228506a940114288d61812bfe60c045a0abeac1","modified":1526970279247},{"_id":"themes/next/layout/_layout.swig","hash":"2164570bb05db11ee4bcfbbb5d183a759afe9d07","modified":1526970279281},{"_id":"themes/next/layout/archive.swig","hash":"9a2c14874a75c7085d2bada5e39201d3fc4fd2b4","modified":1526970279365},{"_id":"themes/next/layout/category.swig","hash":"3cbb3f72429647411f9e85f2544bdf0e3ad2e6b2","modified":1526970279367},{"_id":"themes/next/layout/index.swig","hash":"555a357ecf17128db4e29346c92bb6298e66547a","modified":1526970279368},{"_id":"themes/next/layout/post.swig","hash":"7a6ce102ca82c3a80f776e555dddae1a9981e1ed","modified":1526970279370},{"_id":"themes/next/layout/schedule.swig","hash":"87ad6055df01fa2e63e51887d34a2d8f0fbd2f5a","modified":1526970279371},{"_id":"themes/next/layout/page.swig","hash":"e8fcaa641d46930237675d2ad4b56964d9e262e9","modified":1526970279369},{"_id":"themes/next/layout/tag.swig","hash":"34e1c016cbdf94a31f9c5d494854ff46b2a182e9","modified":1526970279372},{"_id":"themes/next/languages/default.yml","hash":"b3bcd8934327448a43d9bfada5dd11b1b8c1402e","modified":1526970279262},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"a0a82dbfabdef9a9d7c17a08ceebfb4052d98d81","modified":1526970279246},{"_id":"themes/next/languages/de.yml","hash":"fd02d9c2035798d5dc7c1a96b4c3e24b05b31a47","modified":1526970279261},{"_id":"themes/next/languages/id.yml","hash":"dccae33e2a5b3c9f11c0e05ec4a7201af1b25745","modified":1526970279264},{"_id":"themes/next/languages/fr-FR.yml","hash":"efeeb55d5c4add54ad59a612fc0630ee1300388c","modified":1526970279264},{"_id":"themes/next/languages/ko.yml","hash":"dc8f3e8c64eb7c4bb2385025b3006b8efec8b31d","modified":1526970279268},{"_id":"themes/next/languages/nl-NL.yml","hash":"213e7a002b82fb265f69dabafbbc382cfd460030","modified":1526970279269},{"_id":"themes/next/languages/pt-BR.yml","hash":"568d494a1f37726a5375b11452a45c71c3e2852d","modified":1526970279270},{"_id":"themes/next/languages/pt.yml","hash":"2efcd240c66ab1a122f061505ca0fb1e8819877b","modified":1526970279271},{"_id":"themes/next/languages/ru.yml","hash":"e33ee44e80f82e329900fc41eb0bb6823397a4d6","modified":1526970279272},{"_id":"themes/next/languages/vi.yml","hash":"a9b89ebd3e5933033d1386c7c56b66c44aca299a","modified":1526970279273},{"_id":"themes/next/languages/ja.yml","hash":"37f954e47a3bc669620ca559e3edb3b0072a4be5","modified":1526970279267},{"_id":"themes/next/languages/zh-Hans.yml","hash":"66b9b42f143c3cb2f782a94abd4c4cbd5fd7f55f","modified":1526970279275},{"_id":"themes/next/languages/it.yml","hash":"a215d016146b1bd92cef046042081cbe0c7f976f","modified":1526970279266},{"_id":"themes/next/scripts/.javascript_ignore","hash":"cd250ad74ca22bd2c054476456a73d9687f05f87","modified":1526970279251},{"_id":"themes/next/scripts/merge-configs.js","hash":"38d86aab4fc12fb741ae52099be475196b9db972","modified":1526970279375},{"_id":"themes/next/scripts/merge.js","hash":"39b84b937b2a9608b94e5872349a47200e1800ff","modified":1526970279377},{"_id":"themes/next/test/.jshintrc","hash":"c9fca43ae0d99718e45a6f5ce736a18ba5fc8fb6","modified":1526970279701},{"_id":"themes/next/languages/zh-tw.yml","hash":"432463b481e105073accda16c3e590e54c8e7b74","modified":1526970279277},{"_id":"themes/next/languages/en.yml","hash":"2f4b4776ca1a08cc266a19afb0d1350a3926f42c","modified":1526970279263},{"_id":"themes/next/.git/COMMIT_EDITMSG","hash":"e5fa44f2b31c1fb553b6021e7360d07d5d91ff5e","modified":1526974925768},{"_id":"themes/next/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1526970279213},{"_id":"themes/next/.git/config","hash":"340cff4364d9733a32042fdb93097c334a781c93","modified":1526970279229},{"_id":"themes/next/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1526970225253},{"_id":"themes/next/languages/zh-hk.yml","hash":"fe0d45807d015082049f05b54714988c244888da","modified":1526970279276},{"_id":"themes/next/.git/packed-refs","hash":"8e36811256ee380c2c65692f1b8f8e77c5bc33c9","modified":1526970279200},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1526970279517},{"_id":"source/_posts/基于vue的管理系统权限管控方案/SequenceDiagram.png","hash":"0845ad0cd31c49612e1232b6b8627c6d27eb55ee","modified":1526981580225},{"_id":"source/_posts/基于vue的管理系统权限管控方案/menu.jpg","hash":"759f70c1e8924ebc906aef71f111c3a1d83bc480","modified":1527669623268},{"_id":"themes/next/layout/_custom/header.swig","hash":"ba8ab5a0280b953aa97435ff8946cbcbb2755a27","modified":1526970279279},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"ba8ab5a0280b953aa97435ff8946cbcbb2755a27","modified":1526970279280},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"8c56dd26157cbc580ae41d97ac34b90ab48ced3f","modified":1526970279283},{"_id":"themes/next/layout/_macro/post-copyright.swig","hash":"f83befdc740beb8dc88805efd7fbb0fef9ed19be","modified":1526970279284},{"_id":"themes/next/test/helpers.js","hash":"f25e7f3265eb5a6e1ccbb5e5012fa9bebf134105","modified":1526970279702},{"_id":"themes/next/.git/index","hash":"9652b53e779eabac146c8824e293f777c895078e","modified":1526974925766},{"_id":"themes/next/test/intern.js","hash":"db90b1063356727d72be0d77054fdc32fa882a66","modified":1526970279704},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"e2e4eae391476da994045ed4c7faf5e05aca2cd7","modified":1526970279290},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"931808ad9b8d8390c0dcf9bdeb0954eeb9185d68","modified":1526970279315},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"c0f5a0955f69ca4ed9ee64a2d5f8aa75064935ad","modified":1526970279314},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"9be624634703be496a5d2535228bc568a8373af9","modified":1526970279323},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"9c7343fd470e0943ebd75f227a083a980816290b","modified":1526970279289},{"_id":"themes/next/layout/_partials/comments.swig","hash":"4adc65a602d1276615da3b887dcbf2ac68e7382b","modified":1526970279291},{"_id":"themes/next/layout/_partials/footer.swig","hash":"26e93336dc57a39590ba8dc80564a1d2ad5ff93b","modified":1526970279292},{"_id":"themes/next/layout/_partials/header.swig","hash":"c54b32263bc8d75918688fb21f795103b3f57f03","modified":1526970279298},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"77c61e0baea3544df361b7338c3cd13dc84dde22","modified":1526970279300},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"1634fb887842698e01ff6e632597fe03c75d2d01","modified":1526970279301},{"_id":"themes/next/layout/_partials/search.swig","hash":"b4ebe4a52a3b51efe549dd1cdee846103664f5eb","modified":1526970279302},{"_id":"themes/next/layout/_third-party/duoshuo-hot-articles.swig","hash":"ba75672183d94f1de7c8bd0eeee497a58c70e889","modified":1526970279350},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"8301c9600bb3e47f7fb98b0e0332ef3c51bb1688","modified":1526970279351},{"_id":"themes/next/layout/_third-party/mathjax.swig","hash":"a0bd3388587fd943baae0d84ca779a707fbcad89","modified":1526970279352},{"_id":"themes/next/layout/_partials/head.swig","hash":"f14a39dad1ddd98e6d3ceb25dda092ba80d391b5","modified":1526970279295},{"_id":"themes/next/layout/_macro/reward.swig","hash":"357d86ec9586705bfbb2c40a8c7d247a407db21a","modified":1526970279288},{"_id":"themes/next/layout/_third-party/needsharebutton.swig","hash":"fa882641da3bd83d9a58a8a97f9d4c62a9ee7b5c","modified":1526970279353},{"_id":"themes/next/layout/_third-party/scroll-cookie.swig","hash":"9a188938d46931d5f3882a140aa1c48b3a893f0c","modified":1526970279356},{"_id":"themes/next/scripts/tags/button.js","hash":"eddbb612c15ac27faf11c59c019ce188f33dec2c","modified":1526970279379},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"99b66949f18398689b904907af23c013be1b978f","modified":1526970279379},{"_id":"themes/next/scripts/tags/exturl.js","hash":"5022c0ba9f1d13192677cf1fd66005c57c3d0f53","modified":1526970279381},{"_id":"themes/next/scripts/tags/full-image.js","hash":"c9f833158c66bd72f627a0559cf96550e867aa72","modified":1526970279382},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"ac681b0d0d8d39ba3817336c0270c6787c2b6b70","modified":1526970279383},{"_id":"themes/next/scripts/tags/label.js","hash":"6f00952d70aadece844ce7fd27adc52816cc7374","modified":1526970279384},{"_id":"themes/next/scripts/tags/lazy-image.js","hash":"bcba2ff25cd7850ce6da322d8bd85a8dd00b5ceb","modified":1526970279386},{"_id":"themes/next/scripts/tags/note.js","hash":"f7eae135f35cdab23728e9d0d88b76e00715faa0","modified":1526970279387},{"_id":"themes/next/scripts/tags/tabs.js","hash":"aa7fc94a5ec27737458d9fe1a75c0db7593352fd","modified":1526970279388},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"554ec568e9d2c71e4a624a8de3cb5929050811d6","modified":1526970279354},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"45eeea0b5fba833e21e38ea10ed5ab385ceb4f01","modified":1526970279518},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"db15d7e1552aa2d2386a6b8a33b3b3a40bf9e43d","modified":1526970279355},{"_id":"themes/next/layout/_macro/post.swig","hash":"4ba938822d56c597490f0731893eaa2443942e0f","modified":1526970279286},{"_id":"themes/next/source/css/main.styl","hash":"a91dbb7ef799f0a171b5e726c801139efe545176","modified":1526970279515},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1526970279521},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1526970279520},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1526970279526},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1526970279524},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1526970279528},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1526970279523},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1526970279531},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1526970279527},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1526970279533},{"_id":"themes/next/source/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1526970279529},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1526970279535},{"_id":"themes/next/source/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1526970279530},{"_id":"themes/next/source/images/quote-r.svg","hash":"2a2a250b32a87c69dcc1b1976c74b747bedbfb41","modified":1526970279537},{"_id":"themes/next/source/images/logo.svg","hash":"169f56fd82941591dad3abd734a50ec7259be950","modified":1526970279534},{"_id":"themes/next/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1526970225271},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1526970279538},{"_id":"themes/next/.git/logs/HEAD","hash":"f3a7037f41917bfd38b065508647e16b5010f6a5","modified":1526974925771},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1526970279320},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1526970279320},{"_id":"themes/next/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1526970225255},{"_id":"themes/next/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1526970225259},{"_id":"themes/next/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1526970225260},{"_id":"themes/next/source/images/quote-l.svg","hash":"cd108d6f44351cadf8e6742565217f88818a0458","modified":1526970279536},{"_id":"themes/next/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1526970225264},{"_id":"themes/next/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1526970225257},{"_id":"themes/next/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1526970225262},{"_id":"themes/next/.git/hooks/update.sample","hash":"39355a075977d05708ef74e1b66d09a36e486df1","modified":1526970225268},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1526970279475},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1526970279476},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1526970279479},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1526970279511},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1526970279514},{"_id":"themes/next/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1526970225267},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"9b84ab576982b2c3bb0291da49143bc77fba3cc6","modified":1526970279317},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"a9a3995b9615adfb8d6b127c78c6771627bee19a","modified":1526970279319},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a9a3995b9615adfb8d6b127c78c6771627bee19a","modified":1526970279322},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"a223919d2e1bf17ca4d6abb2c86f2efca9883dc1","modified":1526970279296},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"b2f0d247b213e4cf8de47af6a304d98070cc7256","modified":1526970279303},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"a8c7f9ca7c605d039a1f3bf4e4d3183700a3dd62","modified":1526970279305},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"b25002a83cbd2ca0c4a5df87ad5bff26477c0457","modified":1526970279306},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"9e3d133ac5bcc6cb51702c83b2611a49811abad1","modified":1526970279307},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"f5e487b0d213ca0bd94aa30bc23b240d65081627","modified":1526970279297},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"d9e2d9282f9be6e04eae105964abb81e512bffed","modified":1526970279309},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"d4fbffd7fa8f2090eb32a871872665d90a885fac","modified":1526970279310},{"_id":"themes/next/layout/_third-party/analytics/analytics-with-widget.swig","hash":"ff947f3561b229bc528cb1837d4ca19612219411","modified":1526970279326},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"71397a5823e8ec8aad3b68aace13150623b3e19d","modified":1526970279327},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"753d262911c27baf663fcaf199267133528656af","modified":1526970279328},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1526970279532},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"a10b7f19d7b5725527514622899df413a34a89db","modified":1526970279330},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"7d94845f96197d9d84a405fa5d4ede75fb81b225","modified":1526970279331},{"_id":"themes/next/layout/_third-party/analytics/firestore.swig","hash":"ccc443b22bd4f8c7ac4145664686c756395b90e0","modified":1526970279332},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"b1e13df83fb2b1d5d513b30b7aa6158b0837daab","modified":1526970279333},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"45f3f629c2aacc381095750e1c8649041a71a84b","modified":1526970279334},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"0a9cdd6958395fcdffc80ab60f0c6301b63664a5","modified":1526970279312},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"8a399df90dadba5ad4e781445b58f4765aeb701e","modified":1526970279336},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"5a8027328f060f965b3014060bebec1d7cf149c1","modified":1526970279338},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"7b11eac3a0685fa1ab2ab6ecff60afc4f15f0d16","modified":1526970279329},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"e6d10ee4fb70b3ae1cd37e9e36e000306734aa2e","modified":1526970279335},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"f9a1647a8f1866deeb94052d1f87a5df99cb1e70","modified":1526970279338},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"b83a51bbe0f1e2ded9819070840b0ea145f003a6","modified":1526970279341},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"4c501ea0b9c494181eb3c607c5526a5754e7fbd8","modified":1526970279340},{"_id":"themes/next/layout/_third-party/comments/hypercomments.swig","hash":"af7f3e43cbdc4f88c13f101f0f341af96ace3383","modified":1526970279344},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"493bd5999a1061b981922be92d8277a0f9152447","modified":1526970279345},{"_id":"themes/next/layout/_third-party/comments/duoshuo.swig","hash":"1600f340e0225361580c44890568dc07dbcf2c89","modified":1526970279342},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"4050553d44ba1396174161c9a6bb0f89fa779eca","modified":1526970279347},{"_id":"themes/next/layout/_third-party/comments/youyan.swig","hash":"7e65ff8fe586cd655b0e9d1ad2912663ff9bd36c","modified":1526970279348},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"34599633658f3b0ffb487728b7766e1c7b551f5a","modified":1526970279360},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"9246162d4bc7e949ce1d12d135cbbaf5dc3024ec","modified":1526970279346},{"_id":"themes/next/layout/_third-party/comments/gitment.swig","hash":"4dcc3213c033994d342d02b800b6229295433d30","modified":1526970279343},{"_id":"themes/next/layout/_third-party/seo/baidu-push.swig","hash":"d8c98938719284fa06492c114d99a1904652a555","modified":1526970279364},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"3403fdd8efde1a0afd11ae8a5a97673f5903087f","modified":1526970279473},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"07f7da320689f828f6e36a6123807964a45157a0","modified":1526970279474},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"7896c3ee107e1a8b9108b6019f1c070600a1e8cc","modified":1526970279477},{"_id":"themes/next/layout/_third-party/search/tinysou.swig","hash":"fe95dd3d166634c466e19aa756e65ad6e8254d3e","modified":1526970279363},{"_id":"themes/next/.git/hooks/pre-rebase.sample","hash":"5885a56ab4fca8075a05a562d005e922cde9853b","modified":1526970225265},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"a25408534f8fe6e321db4bbf9dd03335d648fe17","modified":1526970279510},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"4069f918ccc312da86db6c51205fc6c6eaabb116","modified":1526970279512},{"_id":"themes/next/source/css/_variables/base.styl","hash":"b1f6ea881a4938a54603d68282b0f8efb4d7915d","modified":1526970279513},{"_id":"themes/next/source/js/src/affix.js","hash":"1b509c3b5b290a6f4607f0f06461a0c33acb69b1","modified":1526970279540},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"58e7dd5947817d9fc30770712fc39b2f52230d1e","modified":1526970279509},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"cb431b54ba9c692165a1f5a12e4c564a560f8058","modified":1526970279541},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"0e55cbd93852dc3f8ccb44df74d35d9918f847e0","modified":1526970279478},{"_id":"themes/next/source/js/src/exturl.js","hash":"a2a0f0de07e46211f74942a468f42ee270aa555c","modified":1526970279544},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"b35a7dc47b634197b93487cea8671a40a9fdffce","modified":1526970279545},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"0289031200c3d4c2bdd801ee10fff13bb2c353e4","modified":1526970279542},{"_id":"themes/next/source/js/src/js.cookie.js","hash":"1512c751d219577d338ac0780fb2bbd9075d5298","modified":1526970279546},{"_id":"themes/next/source/js/src/post-details.js","hash":"93a18271b4123dd8f94f09d1439b47c3c19a8712","modified":1526970279548},{"_id":"themes/next/source/js/src/scroll-cookie.js","hash":"02cf91514e41200bc9df5d8bdbeb58575ec06074","modified":1526970279551},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"93479642fd076a1257fecc25fcf5d20ccdefe509","modified":1526970279362},{"_id":"themes/next/source/js/src/utils.js","hash":"b3e9eca64aba59403334f3fa821f100d98d40337","modified":1526970279554},{"_id":"themes/next/source/js/src/motion.js","hash":"885176ed51d468f662fbf0fc09611f45c7e5a3b1","modified":1526970279547},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"b7657be25fc52ec67c75ab5481bdcb483573338b","modified":1526970279552},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1526970279571},{"_id":"themes/next/source/lib/fancybox/.bower.json","hash":"9be892a4e14e0da18ff9cb962c9ef71f163b1b22","modified":1526970279581},{"_id":"themes/next/source/lib/fancybox/.gitattributes","hash":"672d3b5767e0eacd83bb41b188c913f2cf754793","modified":1526970279582},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"bf3eef9d647cd7c9b62feda3bc708c6cdd7c0877","modified":1526970279603},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"6f474ea75c42442da7bbcf2e9143ce98258efd8d","modified":1526970279604},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","hash":"b02737510e9b89aeed6b54f89f602a9c24b06ff2","modified":1526970279579},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"a9b3ee1e4db71a0e4ea6d5bed292d176dd68b261","modified":1526970279607},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1526970279577},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"03ddbf76c1dd1afb93eed0b670d2eee747472ef1","modified":1526970279612},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"c31ff06a740955e44edd4403902e653ccabfd4db","modified":1526970279614},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"ee33b2798b1e714b904d663436c6b3521011d1fa","modified":1526970279615},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"71e7183634dc1b9449f590f15ebd7201add22ca7","modified":1526970279616},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"865d6c1328ab209a4376b9d2b7a7824369565f28","modified":1526970279642},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"b4aefc910578d76b267e86dfffdd5121c8db9aec","modified":1526970279611},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"68a9b9d53126405b0fa5f3324f1fb96dbcc547aa","modified":1526970279605},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"90fa628f156d8045357ff11eaf32e61abacf10e8","modified":1526970279646},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"e0acf1db27b0cc16128a59c46db1db406b5c4c58","modified":1526970279650},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4ded6fee668544778e97e38c2b211fc56c848e77","modified":1526970279647},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"bf773ad48a0b9aa77681a89d7569eefc0f7b7b18","modified":1526970279652},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"b930297cb98b8e1dbd5abe9bc1ed9d5935d18ce8","modified":1526970279649},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","hash":"e33aa8fa48b6639d8d8b937d13261597dd473b3a","modified":1526970279655},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1526970279659},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1526970279660},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1526970279662},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1526970279663},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1526970279664},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1526970279666},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"f4a570908f6c89c6edfb1c74959e733eaadea4f2","modified":1526970279651},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","hash":"2ce5f3bf15c523b9bfc97720d8884bb22602a454","modified":1526970279657},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1526970279669},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1526970279667},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1526970279667},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1526970279670},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1526970279673},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","hash":"14264a210bf94232d58d7599ea2ba93bfa4fb458","modified":1526970279654},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","hash":"2d9a9f38c493fdf7c0b833bb9184b6a1645c11b2","modified":1526970279676},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1526970279671},{"_id":"themes/next/source/lib/three/three-waves.min.js","hash":"8148492dd49aa876d32bb7d5b728d3f5bf6f5074","modified":1526970279678},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1526970279672},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"63da5e80ebb61bb66a2794d5936315ca44231f0c","modified":1526970279689},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","hash":"46a50b91c98b639c9a2b9265c5a1e66a5c656881","modified":1526970279677},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"92d92860418c4216aa59eb4cb4a556290a7ad9c3","modified":1526970279691},{"_id":"themes/next/source/lib/pace/pace.min.js","hash":"8aaa675f577d5501f5f22d5ccb07c2b76310b690","modified":1526970279674},{"_id":"themes/next/.git/objects/0b/9a1e9a2121d41519681677f074dc03239fd62b","hash":"b447395909ef8fe96508afa6364aa02de4fcbf9d","modified":1526974925769},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"dde584994ac13dc601836e86f4cf490e418d9723","modified":1526970279699},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"bf172816a9c57f9040e3d19c24e181a142daf92b","modified":1526970279696},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"dbbfb50f6502f6b81dcc9fee7b31f1e812da3464","modified":1526970279698},{"_id":"themes/next/.git/refs/heads/master","hash":"8d98b46b14cd1e912997dd12e8ebf8711cb50563","modified":1526974925770},{"_id":"themes/next/source/lib/jquery/index.js","hash":"17a740d68a1c330876c198b6a4d9319f379f3af2","modified":1526970279645},{"_id":"themes/next/.git/objects/ba/306d5d438dd15d30bf13e369f5f32c6e1d9649","hash":"f33c745812ef25a8e9d9959f4e7f354e7f6f2c79","modified":1526974925654},{"_id":"themes/next/layout/_third-party/search/algolia-search/assets.swig","hash":"218cc936ba3518a3591b2c9eda46bc701edf7710","modified":1526970279358},{"_id":"themes/next/layout/_third-party/search/algolia-search/dom.swig","hash":"2530de0f3125a912756f6c0e9090cd012134a4c5","modified":1526970279360},{"_id":"themes/next/.git/objects/64/f6e4b551773cd4f03f98f013d76f7e80c87f5a","hash":"26579a7a8e043d354fa90e3b414de365528628cb","modified":1526974925765},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"ff4489cd582f518bba6909a301ac1292a38b4e96","modified":1526970279394},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"7ad4081466b397e2a6204141bb7768b7c01bd93c","modified":1526970279396},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"8b32928686c327151e13d3ab100157f9a03cd59f","modified":1526970279394},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"6eb4bcc3056bd279d000607e8b4dad50d368ca69","modified":1526970279441},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"4f2801fc4cf3f31bf2069f41db8c6ce0e3da9e39","modified":1526970279414},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"8f86f694c0749a18ab3ad6f6df75466ca137a4bc","modified":1526970279391},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"24ee4b356ff55fc6e58f26a929fa07750002cf29","modified":1526970279466},{"_id":"themes/next/source/css/_common/scaffolding/mobile.styl","hash":"91ca75492cd51f2553f4d294ed2f48239fcd55eb","modified":1526970279469},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"12662536c7a07fff548abe94171f34b768dd610f","modified":1526970279465},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"a17e2b871a335f290afb392a08f94fd35f59c715","modified":1526970279471},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"ea9069645696f86c5df64208490876fe150c8cae","modified":1526970279471},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"237d185ac62ec9877e300947fa0109c44fb8db19","modified":1526970279392},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"25d5e45a355ee2093f3b8b8eeac125ebf3905026","modified":1526970279483},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"1da5c800d025345f212a3bf1be035060f4e5e6ed","modified":1526970279467},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"b1025c421406d2c24cc92a02ae28c1915b01e240","modified":1526970279486},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"d0bfd1bef988c76f7d7dd72d88af6f0908a8b0db","modified":1526970279484},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"26666c1f472bf5f3fb9bc62081cca22b4de15ccb","modified":1526970279487},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1526970279489},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"9c99034f8e00d47e978b3959f51eb4a9ded0fcc8","modified":1526970279488},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"31127dcbf4c7b4ada53ffbf1638b5fe325b7cbc0","modified":1526970279494},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"748dbfbf9c08e719ddc775958003c64b00d39dab","modified":1526970279496},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"e695e58f714129ca292c2e54cd62c251aca7f7fe","modified":1526970279497},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1526970279498},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"5dbc0d0c897e46760e5dbee416530d485c747bba","modified":1526970279499},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"bce344d3a665b4c55230d2a91eac2ad16d6f32fd","modified":1526970279502},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"416988dca389e6e2fdfa51fa7f4ee07eb53f82fb","modified":1526970279503},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9b913b73d31d21f057f97115ffab93cfa578b884","modified":1526970279490},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"1f6e2ce674735269599acc6d77b3ea18d31967fc","modified":1526970279506},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"ad2dcedf393ed1f3f5afd2508d24969c916d02fc","modified":1526970279507},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"86197902dfd3bededba10ba62b8f9f22e0420bde","modified":1526970279508},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"4642e30010af8b2b037f5b43146b10a934941958","modified":1526970279504},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"f1d0b5d7af32c423eaa8bb93ab6a0b45655645dc","modified":1526970279550},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"3f40e8a9fe8e7bd5cfc4cf4cbbbcb9539462e973","modified":1526970279470},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"60fa84aa7731760f05f52dd7d8f79b5f74ac478d","modified":1526970279481},{"_id":"themes/next/source/lib/Han/dist/han.min.js","hash":"16b03db23a52623348f37c04544f2792032c1fb6","modified":1526970279568},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1526970279584},{"_id":"themes/next/source/lib/Han/dist/han.css","hash":"6c26cdb36687d4f0a11dabf5290a909c3506be5c","modified":1526970279563},{"_id":"themes/next/source/lib/Han/dist/han.min.css","hash":"6d586bfcfb7ae48f1b12f76eec82d3ad31947501","modified":1526970279566},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1526970279586},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1526970279585},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"82f33ad0842aa9c154d029e0dada2497d4eb1d57","modified":1526970279598},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1526970279590},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"ae6318aeb62ad4ce7a7e9a4cdacd93ffb004f0fb","modified":1526970279601},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"1d6aeda0480d0e4cb6198edf7719d601d4ae2ccc","modified":1526970279608},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"d71602cbca33b9ecdb7ab291b7f86a49530f3601","modified":1526970279600},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1526970279588},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1526970279589},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1526970279609},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"88af80502c44cd52ca81ffe7dc7276b7eccb06cf","modified":1526970279621},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"3655f1fdf1e584c4d8e8d39026093ca306a5a341","modified":1526970279618},{"_id":"themes/next/.git/logs/refs/heads/master","hash":"f3a7037f41917bfd38b065508647e16b5010f6a5","modified":1526974925770},{"_id":"themes/next/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1526970279205},{"_id":"themes/next/source/lib/Han/dist/han.js","hash":"4ac683b2bc8531c84d98f51b86957be0e6f830f3","modified":1526970279565},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1526970279640},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1526970279639},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"41ea797c68dbcff2f6fb3aba1d1043a22e7cc0f6","modified":1526970279687},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"1573904b82807abbb32c97a3632c6c6808eaac50","modified":1526970279619},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"9f73c4696f0907aa451a855444f88fc0698fa472","modified":1526970279397},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d63e0cacc53dd375fcc113465a4328c59ff5f2c1","modified":1526970279400},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"53cde051e0337f4bf42fb8d6d7a79fa3fa6d4ef2","modified":1526970279399},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"a817b6c158cbc5bab3582713de9fe18a18a80552","modified":1526970279688},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"1a0d059799a298fe17c49a44298d32cebde93785","modified":1526970279401},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"1727702eac5d326b5c81a667944a245016668231","modified":1526970279404},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"167986d0f649516671ddf7193eebba7b421cd115","modified":1526970279405},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"50450d9fdc8a2b2be8cfca51e3e1a01ffd636c0b","modified":1526970279406},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"0656e753f182c9f47fef7304c847b7587a85ef0d","modified":1526970279402},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"b6f3a06a94a6ee5470c956663164d58eda818a64","modified":1526970279409},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"7fb593f90d74a99c21840679933b9ef6fdc16a61","modified":1526970279410},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"f9760ecf186954cee3ba4a149be334e9ba296b89","modified":1526970279411},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"4e3838d7ac81d9ad133960f0f7ed58a44a015285","modified":1526970279412},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"7fe4d4d656e86276c17cb4e48a560cb6a4def703","modified":1526970279407},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"62fbbd32cf5a99ae550c45c763a2c4813a138d01","modified":1526970279416},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"875cbe88d5c7f6248990e2beb97c9828920e7e24","modified":1526970279417},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"caf263d1928496688c0e1419801eafd7e6919ce5","modified":1526970279418},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"a200c0a1c5a895ac9dc41e0641a5dfcd766be99b","modified":1526970279419},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"8cf318644acc8b4978537c263290363e21c7f5af","modified":1526970279413},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"cd9e214e502697f2f2db84eb721bac57a49b0fce","modified":1526970279421},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"a6c6eb8adba0a090ad1f4b9124e866887f20d10d","modified":1526970279420},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"d0d7a5c90d62b685520d2b47fea8ba6019ff5402","modified":1526970279422},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"27deb3d3a243d30022055dac7dad851024099a8b","modified":1526970279423},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"b2495ae5e04dcca610aacadc47881d9e716cd440","modified":1526970279425},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"5a982d8ef3b3623ea5f59e63728990f5623c1b57","modified":1526970279426},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"4237c6e9d59da349639de20e559e87c2c0218cfd","modified":1526970279695},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"01567edaea6978628aa5521a122a85434c418bfd","modified":1526970279428},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"ca88ea6999a61fb905eb6e72eba5f92d4ee31e6e","modified":1526970279424},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"39f04c4c7237a4e10acd3002331992b79945d241","modified":1526970279431},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"89d6c3b697efc63de42afd2e89194b1be14152af","modified":1526970279430},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"8dd9a1c6f4f6baa00c2cf01837e7617120cf9660","modified":1526970279434},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"11c22f0fb3f6beb13e5a425ec064a4ff974c13b7","modified":1526970279435},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"61f8cea3c01acd600e90e1bc2a07def405503748","modified":1526970279436},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"761eba9811b050b25d548cc0854de4824b41eb08","modified":1526970279432},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"c8fe49a4bc014c24dead05b782a7082411a4abc5","modified":1526970279438},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"1153bb71edf253765145559674390e16dd67c633","modified":1526970279437},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"a1521d48bb06d8d703753f52a198baa197af7da2","modified":1526970279439},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"5ef6343835f484a2c0770bd1eb9cc443609e4c39","modified":1526970279440},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"e71652d3216e289c8548b1ea2357822c1476a425","modified":1526970279441},{"_id":"themes/next/source/css/_common/components/tags/exturl.styl","hash":"a3bdd71237afc112b2aa255f278cab6baeb25351","modified":1526970279444},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"f825da191816eef69ea8efb498a7f756d5ebb498","modified":1526970279445},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"2fe76476432b31993338cb45cdb3b29a518b6379","modified":1526970279443},{"_id":"themes/next/source/css/_common/components/tags/label.styl","hash":"2ab1322fe52ab5aafd49e68f5bd890e8380ee927","modified":1526970279448},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"2ad1a2a9bbf6742d1b0762c4c623b68113d1e0fe","modified":1526970279447},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"9a409b798decdefdaf7a23f0b11004a8c27e82f3","modified":1526970279450},{"_id":"themes/next/source/css/_common/components/tags/tabs.styl","hash":"154a87a32d2fead480d5e909c37f6c476671c5e6","modified":1526970279451},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"b80604868e4f5cf20fccafd7ee415c20c804f700","modified":1526970279452},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"7968343e41f8b94b318c36289dff1196c3eb1791","modified":1526970279429},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"5dbeed535d63a50265d96b396a5440f9bb31e4ba","modified":1526970279454},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"a6e7d698702c2e383dde3fde2abde27951679084","modified":1526970279456},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"717cc7f82be9cc151e23a7678601ff2fd3a7fa1d","modified":1526970279457},{"_id":"themes/next/source/css/_common/components/third-party/gitment.styl","hash":"874278147115601d2abf15987f5f7a84ada1ac6b","modified":1526970279458},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"10599e16414a8b7a76c4e79e6617b5fe3d4d1adf","modified":1526970279459},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"15975ba7456b96916b1dbac448a1a0d2c38b8f3d","modified":1526970279460},{"_id":"themes/next/source/css/_common/components/tags/note-modern.styl","hash":"b7076e58d647265ee0ad2b461fe8ce72c9373bc5","modified":1526970279449},{"_id":"themes/next/source/css/_common/components/third-party/needsharebutton.styl","hash":"28825ae15fa20ae3942cdaa7bcc1f3523ce59acc","modified":1526970279462},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"9c8196394a89dfa40b87bf0019e80144365a9c93","modified":1526970279463},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"a07aa12cc36ac5c819670c2a3c17d07ed7a08986","modified":1526970279491},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"1f09be9bb38411f0629b58c3b23873589a6dbcaa","modified":1526970279493},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"1f09be9bb38411f0629b58c3b23873589a6dbcaa","modified":1526970279501},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"ccb34c52be8adba5996c6b94f9e723bd07d34c16","modified":1526970279427},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"16087276945fa038f199692e3eabb1c52b8ea633","modified":1526970279461},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"bba4f3bdb7517cd85376df3e1209b570c0548c69","modified":1526970279453},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1526970279560},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1526970279559},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1526970279562},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1526970279591},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1526970279556},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1526970279558},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"6394c48092085788a8c0ef72670b0652006231a1","modified":1526970279592},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"ee948b4489aedeb548a77c9e45d8c7c5732fd62d","modified":1526970279594},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1526970279624},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1526970279637},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1526970279627},{"_id":"themes/next/.git/logs/refs/remotes/origin/HEAD","hash":"831be34320d247dcc87370369fceb0849974dd97","modified":1526970279211},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"b88b589f5f1aa1b3d87cc7eef34c281ff749b1ae","modified":1526970279596},{"_id":"themes/next/.git/objects/pack/pack-0df40285cfd6ba61cd77b9db468522fa4a3564d9.idx","hash":"9bd7aefeb87914ecfb289a7b609bfefc37dd28e3","modified":1526970279135},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"51139a4c79573d372a347ef01a493222a1eaf10a","modified":1526970279594},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"d22b1629cb23a6181bebb70d0cf653ffe4b835c8","modified":1526970279597},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"90a1b22129efc172e2dfcceeeb76bff58bc3192f","modified":1526970279575},{"_id":"themes/next/source/lib/three/three.min.js","hash":"26273b1cb4914850a89529b48091dc584f2c57b8","modified":1526970279684},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"b5483b11f8ba213e733b5b8af9927a04fec996f6","modified":1526970279634},{"_id":"themes/next/.git/objects/pack/pack-0df40285cfd6ba61cd77b9db468522fa4a3564d9.pack","hash":"b7b9af2417976ae7eab57dc0584d64df5654085a","modified":1526974925000},{"_id":"source/_posts/可视化编辑系统实践/approvalProcess.jpg","hash":"297c4c0e7722cd8e00ee144c8bd3b1a14aaa0df8","modified":1527751319974},{"_id":"source/_posts/可视化编辑系统实践/approval.jpg","hash":"177e0b7baf132f48bddb2dcac35a14da36447d72","modified":1527767224173},{"_id":"source/_posts/可视化编辑系统实践/issue.jpg","hash":"1eea26f155dad2c4ebc4b73c9eef38eaae556ccd","modified":1527767224190},{"_id":"source/_posts/gitflow工作流程使用经验.md","hash":"ca8313e4324d7da25740e4cd173ae77088f945f1","modified":1527767220070},{"_id":"source/_posts/可视化编辑系统实践/preview.jpg","hash":"706bb0f78e361ce678ac99f86f7c4a74c46732ca","modified":1527767224191},{"_id":"source/_posts/可视化编辑系统实践/preview2.jpg","hash":"c62c2147c37ad457af94b78ef1ca01e360623494","modified":1527767224196},{"_id":"source/_posts/gitflow工作流程使用经验/gitflow.png","hash":"64f53127384364b18c894babba9ea91df276c56e","modified":1527767220155},{"_id":"public/2018/05/07/基于vue的埋点方案/index.html","hash":"0d989e026a9302cadc61d6f6a9d07fd1c9a6952d","modified":1527768381650},{"_id":"public/archives/index.html","hash":"964188713a7e164c082c0d95e09cda7a19c001bb","modified":1528028930870},{"_id":"public/archives/2018/index.html","hash":"9e84d2327bcc468df40841a9e1ac57a50808135b","modified":1528028930870},{"_id":"public/archives/2018/05/index.html","hash":"2c867807fe1da38c6687d176b2efd529b34a6fb1","modified":1528028930872},{"_id":"public/index.html","hash":"e1705153cfe133ebf07db401033e226aaf5d9ea1","modified":1528028930871},{"_id":"public/2018/05/30/可视化编辑系统实践/index.html","hash":"397d4606f9f246951f9a8ac854b6f6d76c61adb3","modified":1528028930871},{"_id":"public/2018/05/16/gitflow工作流程使用经验/index.html","hash":"9034e9b31eb2bb6ee01dfa3b896b7a0afc011779","modified":1528028930871},{"_id":"public/2018/05/14/基于vue的管理系统权限管控方案/index.html","hash":"b867effad8ba32a1ccdedfc86808a51f5e3a2e49","modified":1528028930871},{"_id":"public/2018/05/14/基于vue的管理系统权限管控方案/menu.jpg","hash":"759f70c1e8924ebc906aef71f111c3a1d83bc480","modified":1527768381658},{"_id":"public/2018/05/30/可视化编辑系统实践/approvalProcess.jpg","hash":"297c4c0e7722cd8e00ee144c8bd3b1a14aaa0df8","modified":1527768381658},{"_id":"public/2018/05/30/可视化编辑系统实践/issue.jpg","hash":"1eea26f155dad2c4ebc4b73c9eef38eaae556ccd","modified":1527768381658},{"_id":"public/2018/05/30/可视化编辑系统实践/approval.jpg","hash":"177e0b7baf132f48bddb2dcac35a14da36447d72","modified":1527768381658},{"_id":"public/2018/05/30/可视化编辑系统实践/preview.jpg","hash":"706bb0f78e361ce678ac99f86f7c4a74c46732ca","modified":1527768381658},{"_id":"public/2018/05/30/可视化编辑系统实践/preview2.jpg","hash":"c62c2147c37ad457af94b78ef1ca01e360623494","modified":1527768381658},{"_id":"public/2018/05/16/gitflow工作流程使用经验/gitflow.png","hash":"64f53127384364b18c894babba9ea91df276c56e","modified":1527768381660},{"_id":"source/_posts/可视化编辑系统实践/workflow.png","hash":"7cf3b89ca91db956ceac0040cf67b7ce5fdae2ba","modified":1527832467427},{"_id":"public/2018/05/30/可视化编辑系统实践/workflow.png","hash":"7cf3b89ca91db956ceac0040cf67b7ce5fdae2ba","modified":1528028930875}],"Category":[],"Data":[],"Page":[],"Post":[{"title":"基于vue的埋点方案","date":"2018-05-07T08:59:01.000Z","_content":"buried-point基于vue的埋点方案\n======\n安装Install\n------\n<pre><code>npm install buried-point</code></pre>\n\n配置configuration\n-----------\n`main.js`中进行如下配置：\n<pre><code>\n  import BuriedPoint from 'buried-point'\n\n  let option = {\n    router: router,  //vue路由对象\n    domain: '127.0.0.1:18080',  //埋点服务器地址\n    path: '/nresource/dcsImg'   //埋点请求路径  `/nresource/dcsImg/dcs.log`\n  }\n  Vue.use(BuriedPoint, option)\n\n</code></pre>\n\n开始使用start\n-------------\n>1.`v-ready-stat`指令，用于采集页面加载完成时数据\n在需要采集数据的vue组件根节点上声明埋点指令`v-ready-stat`\n\n<pre><code>\n  &lt;template&gt;\n  &lt;div class=\"button-content\" v-ready-stat&gt;\n  &lt;/template&gt;\n</code></pre>\n\n>如果需要在页面加载时传递数据，`v-ready-stat`指令可以接收`json`格式的参数`{'SI.si_n':'WEB', 'SI.si_x':'002'}`\n\n<pre><code>\n  &lt;div class=\"icon-content\" v-ready-stat=\"{'SI.si_n':'xxx','SI.si_x':'009'}\"&gt;\n</code></pre>\n\n>2.`v-click-stat`指令，用于采集用户点击事件的数据\n在被点击的dom节点上声明埋点指令`v-click-stat`,数据格式`{'SI.si_n':'WEB', 'SI.si_x':'002'}`\n\n<pre><code>\n\t&lt;el-button type=\"text\" v-data-stat=\"{'SI.si_n':'WEB', 'SI.si_x':'002'}\"&gt;{{message}}&lt;/el-button&gt;\n</code></pre>\n\n>3.命令式采集业务码\n针对需要在业务逻辑中进行埋点的特殊场景，提供命令式埋点方案；\n在vue组件中需要`import`埋点插件`import bp from 'buried-Point'`,在需要埋点的位置调用埋点方法`bp.dcsMultiTrack('SI.si_n', 'WEB_Q', 'SI.si_x', '005')`\n\n<pre><code>\nimport bp from 'buried-Point'\nexport default {\n  //在vue组件的生命周期钩子mounted阶段，进行埋点\n  mounted() {\n    bp.dcsMultiTrack('SI.si_n', 'WEB_Q', 'SI.si_x', '005')\n  }\n}\n</code></pre>\n\n","source":"_posts/基于vue的埋点方案.md","raw":"---\ntitle: '基于vue的埋点方案'\ndate: 2018-05-07 08:59:01\ntags:\n---\nburied-point基于vue的埋点方案\n======\n安装Install\n------\n<pre><code>npm install buried-point</code></pre>\n\n配置configuration\n-----------\n`main.js`中进行如下配置：\n<pre><code>\n  import BuriedPoint from 'buried-point'\n\n  let option = {\n    router: router,  //vue路由对象\n    domain: '127.0.0.1:18080',  //埋点服务器地址\n    path: '/nresource/dcsImg'   //埋点请求路径  `/nresource/dcsImg/dcs.log`\n  }\n  Vue.use(BuriedPoint, option)\n\n</code></pre>\n\n开始使用start\n-------------\n>1.`v-ready-stat`指令，用于采集页面加载完成时数据\n在需要采集数据的vue组件根节点上声明埋点指令`v-ready-stat`\n\n<pre><code>\n  &lt;template&gt;\n  &lt;div class=\"button-content\" v-ready-stat&gt;\n  &lt;/template&gt;\n</code></pre>\n\n>如果需要在页面加载时传递数据，`v-ready-stat`指令可以接收`json`格式的参数`{'SI.si_n':'WEB', 'SI.si_x':'002'}`\n\n<pre><code>\n  &lt;div class=\"icon-content\" v-ready-stat=\"{'SI.si_n':'xxx','SI.si_x':'009'}\"&gt;\n</code></pre>\n\n>2.`v-click-stat`指令，用于采集用户点击事件的数据\n在被点击的dom节点上声明埋点指令`v-click-stat`,数据格式`{'SI.si_n':'WEB', 'SI.si_x':'002'}`\n\n<pre><code>\n\t&lt;el-button type=\"text\" v-data-stat=\"{'SI.si_n':'WEB', 'SI.si_x':'002'}\"&gt;{{message}}&lt;/el-button&gt;\n</code></pre>\n\n>3.命令式采集业务码\n针对需要在业务逻辑中进行埋点的特殊场景，提供命令式埋点方案；\n在vue组件中需要`import`埋点插件`import bp from 'buried-Point'`,在需要埋点的位置调用埋点方法`bp.dcsMultiTrack('SI.si_n', 'WEB_Q', 'SI.si_x', '005')`\n\n<pre><code>\nimport bp from 'buried-Point'\nexport default {\n  //在vue组件的生命周期钩子mounted阶段，进行埋点\n  mounted() {\n    bp.dcsMultiTrack('SI.si_n', 'WEB_Q', 'SI.si_x', '005')\n  }\n}\n</code></pre>\n\n","slug":"基于vue的埋点方案","published":1,"updated":"2018-05-07T01:32:16.535Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjhsvk8e60000j0m2uad1kdjk","content":"<h1 id=\"buried-point基于vue的埋点方案\"><a href=\"#buried-point基于vue的埋点方案\" class=\"headerlink\" title=\"buried-point基于vue的埋点方案\"></a>buried-point基于vue的埋点方案</h1><h2 id=\"安装Install\"><a href=\"#安装Install\" class=\"headerlink\" title=\"安装Install\"></a>安装Install</h2><pre><code>npm install buried-point</code></pre>\n\n<h2 id=\"配置configuration\"><a href=\"#配置configuration\" class=\"headerlink\" title=\"配置configuration\"></a>配置configuration</h2><p><code>main.js</code>中进行如下配置：</p>\n<pre><code>\n  import BuriedPoint from 'buried-point'\n\n  let option = {\n    router: router,  //vue路由对象\n    domain: '127.0.0.1:18080',  //埋点服务器地址\n    path: '/nresource/dcsImg'   //埋点请求路径  `/nresource/dcsImg/dcs.log`\n  }\n  Vue.use(BuriedPoint, option)\n\n</code></pre>\n\n<h2 id=\"开始使用start\"><a href=\"#开始使用start\" class=\"headerlink\" title=\"开始使用start\"></a>开始使用start</h2><blockquote>\n<p>1.<code>v-ready-stat</code>指令，用于采集页面加载完成时数据<br>在需要采集数据的vue组件根节点上声明埋点指令<code>v-ready-stat</code></p>\n</blockquote>\n<pre><code>\n  &lt;template&gt;\n  &lt;div class=\"button-content\" v-ready-stat&gt;\n  &lt;/template&gt;\n</code></pre>\n\n<blockquote>\n<p>如果需要在页面加载时传递数据，<code>v-ready-stat</code>指令可以接收<code>json</code>格式的参数<code>{&#39;SI.si_n&#39;:&#39;WEB&#39;, &#39;SI.si_x&#39;:&#39;002&#39;}</code></p>\n</blockquote>\n<pre><code>\n  &lt;div class=\"icon-content\" v-ready-stat=\"{'SI.si_n':'xxx','SI.si_x':'009'}\"&gt;\n</code></pre>\n\n<blockquote>\n<p>2.<code>v-click-stat</code>指令，用于采集用户点击事件的数据<br>在被点击的dom节点上声明埋点指令<code>v-click-stat</code>,数据格式<code>{&#39;SI.si_n&#39;:&#39;WEB&#39;, &#39;SI.si_x&#39;:&#39;002&#39;}</code></p>\n</blockquote>\n<pre><code>\n    &lt;el-button type=\"text\" v-data-stat=\"{'SI.si_n':'WEB', 'SI.si_x':'002'}\"&gt;{{message}}&lt;/el-button&gt;\n</code></pre>\n\n<blockquote>\n<p>3.命令式采集业务码<br>针对需要在业务逻辑中进行埋点的特殊场景，提供命令式埋点方案；<br>在vue组件中需要<code>import</code>埋点插件<code>import bp from &#39;buried-Point&#39;</code>,在需要埋点的位置调用埋点方法<code>bp.dcsMultiTrack(&#39;SI.si_n&#39;, &#39;WEB_Q&#39;, &#39;SI.si_x&#39;, &#39;005&#39;)</code></p>\n</blockquote>\n<pre><code>\nimport bp from 'buried-Point'\nexport default {\n  //在vue组件的生命周期钩子mounted阶段，进行埋点\n  mounted() {\n    bp.dcsMultiTrack('SI.si_n', 'WEB_Q', 'SI.si_x', '005')\n  }\n}\n</code></pre>\n\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"buried-point基于vue的埋点方案\"><a href=\"#buried-point基于vue的埋点方案\" class=\"headerlink\" title=\"buried-point基于vue的埋点方案\"></a>buried-point基于vue的埋点方案</h1><h2 id=\"安装Install\"><a href=\"#安装Install\" class=\"headerlink\" title=\"安装Install\"></a>安装Install</h2><pre><code>npm install buried-point</code></pre>\n\n<h2 id=\"配置configuration\"><a href=\"#配置configuration\" class=\"headerlink\" title=\"配置configuration\"></a>配置configuration</h2><p><code>main.js</code>中进行如下配置：</p>\n<pre><code>\n  import BuriedPoint from 'buried-point'\n\n  let option = {\n    router: router,  //vue路由对象\n    domain: '127.0.0.1:18080',  //埋点服务器地址\n    path: '/nresource/dcsImg'   //埋点请求路径  `/nresource/dcsImg/dcs.log`\n  }\n  Vue.use(BuriedPoint, option)\n\n</code></pre>\n\n<h2 id=\"开始使用start\"><a href=\"#开始使用start\" class=\"headerlink\" title=\"开始使用start\"></a>开始使用start</h2><blockquote>\n<p>1.<code>v-ready-stat</code>指令，用于采集页面加载完成时数据<br>在需要采集数据的vue组件根节点上声明埋点指令<code>v-ready-stat</code></p>\n</blockquote>\n<pre><code>\n  &lt;template&gt;\n  &lt;div class=\"button-content\" v-ready-stat&gt;\n  &lt;/template&gt;\n</code></pre>\n\n<blockquote>\n<p>如果需要在页面加载时传递数据，<code>v-ready-stat</code>指令可以接收<code>json</code>格式的参数<code>{&#39;SI.si_n&#39;:&#39;WEB&#39;, &#39;SI.si_x&#39;:&#39;002&#39;}</code></p>\n</blockquote>\n<pre><code>\n  &lt;div class=\"icon-content\" v-ready-stat=\"{'SI.si_n':'xxx','SI.si_x':'009'}\"&gt;\n</code></pre>\n\n<blockquote>\n<p>2.<code>v-click-stat</code>指令，用于采集用户点击事件的数据<br>在被点击的dom节点上声明埋点指令<code>v-click-stat</code>,数据格式<code>{&#39;SI.si_n&#39;:&#39;WEB&#39;, &#39;SI.si_x&#39;:&#39;002&#39;}</code></p>\n</blockquote>\n<pre><code>\n    &lt;el-button type=\"text\" v-data-stat=\"{'SI.si_n':'WEB', 'SI.si_x':'002'}\"&gt;{{message}}&lt;/el-button&gt;\n</code></pre>\n\n<blockquote>\n<p>3.命令式采集业务码<br>针对需要在业务逻辑中进行埋点的特殊场景，提供命令式埋点方案；<br>在vue组件中需要<code>import</code>埋点插件<code>import bp from &#39;buried-Point&#39;</code>,在需要埋点的位置调用埋点方法<code>bp.dcsMultiTrack(&#39;SI.si_n&#39;, &#39;WEB_Q&#39;, &#39;SI.si_x&#39;, &#39;005&#39;)</code></p>\n</blockquote>\n<pre><code>\nimport bp from 'buried-Point'\nexport default {\n  //在vue组件的生命周期钩子mounted阶段，进行埋点\n  mounted() {\n    bp.dcsMultiTrack('SI.si_n', 'WEB_Q', 'SI.si_x', '005')\n  }\n}\n</code></pre>\n\n"},{"title":"基于vue的管理系统权限管控方案","date":"2018-05-14T14:07:52.000Z","_content":"基于vue的管理系统的权限管控方案\n===\n近期在做后台管理系统，前端是vue + vue-router + vuex + webpack实现的spa应用；管理系统中有可视化编辑、工作流、运营数据、报表等不同的能力，需要开放给不同的用户角色使用，因此需要对菜单进行权限控制；\n\n还有一些特殊的情况，由于运营数据和可视化配置是两个前端应用，展示效果是统一的，技术栈也相同（vue...），但是需要统一进行登录和权限管理；（后期也可能会有更多这样的情况，如：报表系统）\n\n最终想要达到的目标：\n1. 不同用户登录后看到的菜单不同；\n2. 多个前端系统的菜单统一\n3. 系统内的菜单是路由访问，系统外的菜单使用外链跳转；\n4. 即使用户保存了前端路由，没有权限也无法访问；\n\n设计方案\n---\n\n###### 时序图\n\n![时序图](SequenceDiagram.png)\n\n登录和权限管理我们有现成的产品，CAS+基础域；集成CAS后，即可通过基础域来管理角色和权限；因此方案是根据CAS和基础域来设计的；\n* 首先，前端需要获取到当前登录的用户和权限；登录后，后端的session中是保存有用户信息和权限信息的，需要增加一个接口为前端返回这些信息；\n* 第二：菜单需要根据权限信息展示，而基础域返回的权限信息只有url；因此需要现有全量的菜单，再根据权限做交集处理；最开始计划全量菜单写在前端工程里，但后续增加菜单需要在每个系统都做一次修改，不合理；基础域中导航管理模块的数据结构正好能满足要求，计划将菜单通过基础域配置，提供接口返回给前端使用，这样的话菜单也可以通过可视化配置，避免了频繁的开发上线；\n* 第三：区分路由还是外链，在配置时统一配置完整的url，包含请求路径和hash值，在每个前端系统中配置自己的上下文，查询出的菜单与当前系统的上下文相同时，即为内部访问路由；如果不相同则表示外链\n* 第四：VUE路由通过权限信息来生成，没有权限则没有路由，即使之前保存了路由也无法访问；保证了安全性；\n![渲染菜单](menu.jpg)\n\n\n在具体实现过程中，踩了不少坑，下面我将详细讲述下实现过程中的关键点：\n\n\n集成CAS\n---\n登录的部分采用现有的CAS产品；CAS是SpringMVC架构实现的单点登录应用，有独立的登录界面，通过在目标应用的web.xml中配置过滤器、集成jar包的方式，在目标应用收到请求时，向CAS系统发起验证登录请求，如未登录则拦截请求，重定向至CAS登录界面；\n\n在前后端分离的项目中，请求前端工程时，需要前端主动发起请求，判断登录状态，如未登录由前端重定向至CAS登录界面（后端返回指定错误码）；\n\n在前端应用加载时就发起请求验证登录状态，可以在main.js中进行；如果未登录重定向至登录界面；\n```bash\n  axios({method: 'post', url: '/y/adm/market/sso/asynchronLoginCheckServlet', data: {}}).then(({ data }) => {\n    if (data.code === '009999') {\n      window.location.href = config.domain + '/cas/login?service=' + config.retDom + '/market/sso/asynchronLoginResServlet?page=' + window.location.origin + '/y/adm/market/index.html'; \n    }\n  })\n```\n\n\n菜单初始化\n---\n#### 权限信息获取\n登录成功后，后端应用的session中会保存当前登录用户的基本信息和权限信息；后端提供接口，在登录成功后获取session中的信息，数据结构如下：\n```bash\n{\n\t\"data\":\n\t{\n\t\t\"authority\":[],   //url权限列表\n\t\t\"contactPhone\":\"13934900000\",   \n\t\t\"loginNo\":\"admin\"  //登录账号\n\t},\n\t\"retCode\":\"0000\",\n\t\"retMsg\":\"OK\"\n}\n```\n\n#### 菜单列表查询\n采用基础域的权限模型\n#### 补充查询sql，画一下UML图\n\n#### 初始化菜单\n拿到全量的菜单信息后，根据权限信息进行过滤，将没有权限的菜单剔除掉：\n\n权限信息查询和菜单查询需要放在登录后进行，并且需要在权限获取后再进行菜单查询，否则在菜单渲染时，会出现权限列表尚未获取情况，导致菜单未经过滤全部展示出来；\n\n因此权限信息获取接口和菜单列表接口需要处理竞态，竞态的处理建议放在同一个action中来做，如果写成两个action，处理竞态要麻烦很多；\n```bash\n  async fetchUserInfo ({ commit }, payload) {\n    let response = null\n    let response1 = null\n    try {\n      response = await initBase({})\n      response1 = await qryMenu({})\n      response.data.menuList = response1.data\n      let rou = initAuthority(response.data)\n      commit('SET_USER_BASE_INFO', response.data)\n      return rou\n    } catch (err) {\n      console.error(err)\n    }\n  }\n```\ninitAuthority方法处理三件事：\n1、过滤menuList中没有权限的menu；\n2、根据权限生成路由对象；\n3、区分出内链和外链（系统内菜单还是系统外菜单）；\n这里需要注意一点，为了菜单是系统内还是系统外，录入菜单url时，需要录入完整的url，\n例如：http://xxx/111/222.html#333\n由于系统的上下文不同，在处理时根据本系统的上下文来区分，是本系统的上下文，则只保留路由部分；非本系统则保留完整的url；\n```bash\n  data.menuList.filter(function (x) {\n    x.childPortalNavs = x.childPortalNavs.filter(function (y) {\n      y.childPortalNavs = y.childPortalNavs.map(function (z) {\n        if (z.appVersionUrl.indexOf(config.host) > -1) {\n          z.appVersionUrl = z.appVersionUrl.split('#')[1]\n          z.out = false\n        } else {\n          z.out = true\n        }\n        return z\n      })\n      return y.childPortalNavs.length > 0\n    })\n    return x.childPortalNavs.length > 0\n  })\n```\n\ncommit设置status中的变量：\n```bash\n'SET_USER_BASE_INFO' (state, payload) {\n    let {loginNo, contactPhone, authority, menuList} = payload\n    state.userBase.name = loginNo\n    state.userBase.phone = contactPhone\n    state.userBase.authority = authority\n    state.menuList = menuList\n  },\n```\n\n#### Router（路由）管理\n路由管理就是说，可访问的路由要和菜单保持一致；\n但是vue-router的实例，在new vue实例的时候，就加载了，且必须加载，这个时候，登录路由一定要加载，可是这个时候没有登录，无法确定权限\n\n解决思路很简单，菜单和路由同步，肯定是采用了vuex，一开始的思路的是，在一开始，就把所有的路由规则加载，然后在登录的时候，取得权限路由，对比两个路由，通过修改修改一个权限字段来隐藏菜单，如果在后台页面添加了新菜单规则，路由是按模块加载的不同的文件，这时对路由的文件进行新的读写，虽然可以解决问题，但是如果手动在浏览器地址上路由，依然可以访问，所以在路由的全局钩子上还要做拦截。\n\n上面的思路可以解决问题，但是很繁琐；\n\n幸运的是VUE在2.2版本以后，官方新增了api，addRoutes，专门针对服务端渲染路由，那么这下问题就比较简单了；\n\n在前面initAuthority方法中，我们已经拿到了经过权限过滤的菜单列表了，只要再把列表中属于系统内的菜单生成路由对象，通过addRoutes动态加载到路由中就可以了；\n```bash\nconst checkMenus = function (data) {\n  data.menuList.forEach(function (x) {\n    if (x.childPortalNavs.length > 0) {\n      x.childPortalNavs.forEach(function (y) {\n        if (y.childPortalNavs.length > 0) {\n          y.childPortalNavs.forEach(function (z) {\n            if (!z.out) {\n              rou.children.push({\n                path: z.appVersionUrl,\n                name: z.naviName,\n                component: componentMap[z.appVersionUrl]\n              })\n            }\n          })\n        }\n      })\n    }\n  })\n  return rou\n}\n```\n\n前面的代码中，initAuthority方法返回的就是生成的路由对象：\n```bash\nstore.dispatch('easyMarketing/fetchUserInfo', null, { root: true }).then(rou => {\n   router.addRoutes([rou])\n});\n```\n\n#### 菜单渲染\n菜单根据menuList渲染即可，渲染时根据是否系统外菜单增加a标签\n```bash\n  <el-menu-item :index=\"item2.out ? '' : item2.appVersionUrl\" v-for=\"item2 in item1.childPortalNavs\" :key=\"item2.naviId\">\n    <a :href=\"item2.appVersionUrl\" v-if=\"item2.out\" style=\"color:rgb(143, 151, 161);\">\n      {{item2.naviName}}\n    </a>\n    <a style=\"color:rgb(143, 151, 161);\" v-else>\n      {{item2.naviName}}\n    </a>\n  </el-menu-item>\n```\n需要注意一点：渲染时，系统外的菜单，菜单路由要为空，否则会出现先切换路由再触发a标签的跳转，浏览器选择上一步时就会出现空页面；\n\n总结\n---\n1、菜单结构保持3级，只有最小级的菜单有访问路由；\n2、根据系统上下文区分菜单是否本系统菜单；\n3、使用addRoutes动态生成路由，保证路由和菜单的一致性，没有权限的菜单即使知道路由也无法访问；\n4、权限信息查询和菜单查询要放在一个action中查，使用异步开发手段处理好竞态；\n5、外链菜单渲染时路由参数置空，保证系统间切换的一致性性；\n\n##### 此方案可复用至多个前端系统共享菜单的场景，菜单管理只需要在基础域中进行配置，前端工程无需改造；","source":"_posts/基于vue的管理系统权限管控方案.md","raw":"---\ntitle: 基于vue的管理系统权限管控方案\ndate: 2018-05-14 14:07:52\ntags:\n---\n基于vue的管理系统的权限管控方案\n===\n近期在做后台管理系统，前端是vue + vue-router + vuex + webpack实现的spa应用；管理系统中有可视化编辑、工作流、运营数据、报表等不同的能力，需要开放给不同的用户角色使用，因此需要对菜单进行权限控制；\n\n还有一些特殊的情况，由于运营数据和可视化配置是两个前端应用，展示效果是统一的，技术栈也相同（vue...），但是需要统一进行登录和权限管理；（后期也可能会有更多这样的情况，如：报表系统）\n\n最终想要达到的目标：\n1. 不同用户登录后看到的菜单不同；\n2. 多个前端系统的菜单统一\n3. 系统内的菜单是路由访问，系统外的菜单使用外链跳转；\n4. 即使用户保存了前端路由，没有权限也无法访问；\n\n设计方案\n---\n\n###### 时序图\n\n![时序图](SequenceDiagram.png)\n\n登录和权限管理我们有现成的产品，CAS+基础域；集成CAS后，即可通过基础域来管理角色和权限；因此方案是根据CAS和基础域来设计的；\n* 首先，前端需要获取到当前登录的用户和权限；登录后，后端的session中是保存有用户信息和权限信息的，需要增加一个接口为前端返回这些信息；\n* 第二：菜单需要根据权限信息展示，而基础域返回的权限信息只有url；因此需要现有全量的菜单，再根据权限做交集处理；最开始计划全量菜单写在前端工程里，但后续增加菜单需要在每个系统都做一次修改，不合理；基础域中导航管理模块的数据结构正好能满足要求，计划将菜单通过基础域配置，提供接口返回给前端使用，这样的话菜单也可以通过可视化配置，避免了频繁的开发上线；\n* 第三：区分路由还是外链，在配置时统一配置完整的url，包含请求路径和hash值，在每个前端系统中配置自己的上下文，查询出的菜单与当前系统的上下文相同时，即为内部访问路由；如果不相同则表示外链\n* 第四：VUE路由通过权限信息来生成，没有权限则没有路由，即使之前保存了路由也无法访问；保证了安全性；\n![渲染菜单](menu.jpg)\n\n\n在具体实现过程中，踩了不少坑，下面我将详细讲述下实现过程中的关键点：\n\n\n集成CAS\n---\n登录的部分采用现有的CAS产品；CAS是SpringMVC架构实现的单点登录应用，有独立的登录界面，通过在目标应用的web.xml中配置过滤器、集成jar包的方式，在目标应用收到请求时，向CAS系统发起验证登录请求，如未登录则拦截请求，重定向至CAS登录界面；\n\n在前后端分离的项目中，请求前端工程时，需要前端主动发起请求，判断登录状态，如未登录由前端重定向至CAS登录界面（后端返回指定错误码）；\n\n在前端应用加载时就发起请求验证登录状态，可以在main.js中进行；如果未登录重定向至登录界面；\n```bash\n  axios({method: 'post', url: '/y/adm/market/sso/asynchronLoginCheckServlet', data: {}}).then(({ data }) => {\n    if (data.code === '009999') {\n      window.location.href = config.domain + '/cas/login?service=' + config.retDom + '/market/sso/asynchronLoginResServlet?page=' + window.location.origin + '/y/adm/market/index.html'; \n    }\n  })\n```\n\n\n菜单初始化\n---\n#### 权限信息获取\n登录成功后，后端应用的session中会保存当前登录用户的基本信息和权限信息；后端提供接口，在登录成功后获取session中的信息，数据结构如下：\n```bash\n{\n\t\"data\":\n\t{\n\t\t\"authority\":[],   //url权限列表\n\t\t\"contactPhone\":\"13934900000\",   \n\t\t\"loginNo\":\"admin\"  //登录账号\n\t},\n\t\"retCode\":\"0000\",\n\t\"retMsg\":\"OK\"\n}\n```\n\n#### 菜单列表查询\n采用基础域的权限模型\n#### 补充查询sql，画一下UML图\n\n#### 初始化菜单\n拿到全量的菜单信息后，根据权限信息进行过滤，将没有权限的菜单剔除掉：\n\n权限信息查询和菜单查询需要放在登录后进行，并且需要在权限获取后再进行菜单查询，否则在菜单渲染时，会出现权限列表尚未获取情况，导致菜单未经过滤全部展示出来；\n\n因此权限信息获取接口和菜单列表接口需要处理竞态，竞态的处理建议放在同一个action中来做，如果写成两个action，处理竞态要麻烦很多；\n```bash\n  async fetchUserInfo ({ commit }, payload) {\n    let response = null\n    let response1 = null\n    try {\n      response = await initBase({})\n      response1 = await qryMenu({})\n      response.data.menuList = response1.data\n      let rou = initAuthority(response.data)\n      commit('SET_USER_BASE_INFO', response.data)\n      return rou\n    } catch (err) {\n      console.error(err)\n    }\n  }\n```\ninitAuthority方法处理三件事：\n1、过滤menuList中没有权限的menu；\n2、根据权限生成路由对象；\n3、区分出内链和外链（系统内菜单还是系统外菜单）；\n这里需要注意一点，为了菜单是系统内还是系统外，录入菜单url时，需要录入完整的url，\n例如：http://xxx/111/222.html#333\n由于系统的上下文不同，在处理时根据本系统的上下文来区分，是本系统的上下文，则只保留路由部分；非本系统则保留完整的url；\n```bash\n  data.menuList.filter(function (x) {\n    x.childPortalNavs = x.childPortalNavs.filter(function (y) {\n      y.childPortalNavs = y.childPortalNavs.map(function (z) {\n        if (z.appVersionUrl.indexOf(config.host) > -1) {\n          z.appVersionUrl = z.appVersionUrl.split('#')[1]\n          z.out = false\n        } else {\n          z.out = true\n        }\n        return z\n      })\n      return y.childPortalNavs.length > 0\n    })\n    return x.childPortalNavs.length > 0\n  })\n```\n\ncommit设置status中的变量：\n```bash\n'SET_USER_BASE_INFO' (state, payload) {\n    let {loginNo, contactPhone, authority, menuList} = payload\n    state.userBase.name = loginNo\n    state.userBase.phone = contactPhone\n    state.userBase.authority = authority\n    state.menuList = menuList\n  },\n```\n\n#### Router（路由）管理\n路由管理就是说，可访问的路由要和菜单保持一致；\n但是vue-router的实例，在new vue实例的时候，就加载了，且必须加载，这个时候，登录路由一定要加载，可是这个时候没有登录，无法确定权限\n\n解决思路很简单，菜单和路由同步，肯定是采用了vuex，一开始的思路的是，在一开始，就把所有的路由规则加载，然后在登录的时候，取得权限路由，对比两个路由，通过修改修改一个权限字段来隐藏菜单，如果在后台页面添加了新菜单规则，路由是按模块加载的不同的文件，这时对路由的文件进行新的读写，虽然可以解决问题，但是如果手动在浏览器地址上路由，依然可以访问，所以在路由的全局钩子上还要做拦截。\n\n上面的思路可以解决问题，但是很繁琐；\n\n幸运的是VUE在2.2版本以后，官方新增了api，addRoutes，专门针对服务端渲染路由，那么这下问题就比较简单了；\n\n在前面initAuthority方法中，我们已经拿到了经过权限过滤的菜单列表了，只要再把列表中属于系统内的菜单生成路由对象，通过addRoutes动态加载到路由中就可以了；\n```bash\nconst checkMenus = function (data) {\n  data.menuList.forEach(function (x) {\n    if (x.childPortalNavs.length > 0) {\n      x.childPortalNavs.forEach(function (y) {\n        if (y.childPortalNavs.length > 0) {\n          y.childPortalNavs.forEach(function (z) {\n            if (!z.out) {\n              rou.children.push({\n                path: z.appVersionUrl,\n                name: z.naviName,\n                component: componentMap[z.appVersionUrl]\n              })\n            }\n          })\n        }\n      })\n    }\n  })\n  return rou\n}\n```\n\n前面的代码中，initAuthority方法返回的就是生成的路由对象：\n```bash\nstore.dispatch('easyMarketing/fetchUserInfo', null, { root: true }).then(rou => {\n   router.addRoutes([rou])\n});\n```\n\n#### 菜单渲染\n菜单根据menuList渲染即可，渲染时根据是否系统外菜单增加a标签\n```bash\n  <el-menu-item :index=\"item2.out ? '' : item2.appVersionUrl\" v-for=\"item2 in item1.childPortalNavs\" :key=\"item2.naviId\">\n    <a :href=\"item2.appVersionUrl\" v-if=\"item2.out\" style=\"color:rgb(143, 151, 161);\">\n      {{item2.naviName}}\n    </a>\n    <a style=\"color:rgb(143, 151, 161);\" v-else>\n      {{item2.naviName}}\n    </a>\n  </el-menu-item>\n```\n需要注意一点：渲染时，系统外的菜单，菜单路由要为空，否则会出现先切换路由再触发a标签的跳转，浏览器选择上一步时就会出现空页面；\n\n总结\n---\n1、菜单结构保持3级，只有最小级的菜单有访问路由；\n2、根据系统上下文区分菜单是否本系统菜单；\n3、使用addRoutes动态生成路由，保证路由和菜单的一致性，没有权限的菜单即使知道路由也无法访问；\n4、权限信息查询和菜单查询要放在一个action中查，使用异步开发手段处理好竞态；\n5、外链菜单渲染时路由参数置空，保证系统间切换的一致性性；\n\n##### 此方案可复用至多个前端系统共享菜单的场景，菜单管理只需要在基础域中进行配置，前端工程无需改造；","slug":"基于vue的管理系统权限管控方案","published":1,"updated":"2018-05-31T11:49:56.687Z","_id":"cjhsvk8ej0001j0m2r109eir4","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"基于vue的管理系统的权限管控方案\"><a href=\"#基于vue的管理系统的权限管控方案\" class=\"headerlink\" title=\"基于vue的管理系统的权限管控方案\"></a>基于vue的管理系统的权限管控方案</h1><p>近期在做后台管理系统，前端是vue + vue-router + vuex + webpack实现的spa应用；管理系统中有可视化编辑、工作流、运营数据、报表等不同的能力，需要开放给不同的用户角色使用，因此需要对菜单进行权限控制；</p>\n<p>还有一些特殊的情况，由于运营数据和可视化配置是两个前端应用，展示效果是统一的，技术栈也相同（vue…），但是需要统一进行登录和权限管理；（后期也可能会有更多这样的情况，如：报表系统）</p>\n<p>最终想要达到的目标：</p>\n<ol>\n<li>不同用户登录后看到的菜单不同；</li>\n<li>多个前端系统的菜单统一</li>\n<li>系统内的菜单是路由访问，系统外的菜单使用外链跳转；</li>\n<li>即使用户保存了前端路由，没有权限也无法访问；</li>\n</ol>\n<h2 id=\"设计方案\"><a href=\"#设计方案\" class=\"headerlink\" title=\"设计方案\"></a>设计方案</h2><h6 id=\"时序图\"><a href=\"#时序图\" class=\"headerlink\" title=\"时序图\"></a>时序图</h6><p><img src=\"/blog/2018/05/14/基于vue的管理系统权限管控方案/SequenceDiagram.png\" alt=\"时序图\"></p>\n<p>登录和权限管理我们有现成的产品，CAS+基础域；集成CAS后，即可通过基础域来管理角色和权限；因此方案是根据CAS和基础域来设计的；</p>\n<ul>\n<li>首先，前端需要获取到当前登录的用户和权限；登录后，后端的session中是保存有用户信息和权限信息的，需要增加一个接口为前端返回这些信息；</li>\n<li>第二：菜单需要根据权限信息展示，而基础域返回的权限信息只有url；因此需要现有全量的菜单，再根据权限做交集处理；最开始计划全量菜单写在前端工程里，但后续增加菜单需要在每个系统都做一次修改，不合理；基础域中导航管理模块的数据结构正好能满足要求，计划将菜单通过基础域配置，提供接口返回给前端使用，这样的话菜单也可以通过可视化配置，避免了频繁的开发上线；</li>\n<li>第三：区分路由还是外链，在配置时统一配置完整的url，包含请求路径和hash值，在每个前端系统中配置自己的上下文，查询出的菜单与当前系统的上下文相同时，即为内部访问路由；如果不相同则表示外链</li>\n<li>第四：VUE路由通过权限信息来生成，没有权限则没有路由，即使之前保存了路由也无法访问；保证了安全性；<br><img src=\"/blog/2018/05/14/基于vue的管理系统权限管控方案/menu.jpg\" alt=\"渲染菜单\"></li>\n</ul>\n<p>在具体实现过程中，踩了不少坑，下面我将详细讲述下实现过程中的关键点：</p>\n<h2 id=\"集成CAS\"><a href=\"#集成CAS\" class=\"headerlink\" title=\"集成CAS\"></a>集成CAS</h2><p>登录的部分采用现有的CAS产品；CAS是SpringMVC架构实现的单点登录应用，有独立的登录界面，通过在目标应用的web.xml中配置过滤器、集成jar包的方式，在目标应用收到请求时，向CAS系统发起验证登录请求，如未登录则拦截请求，重定向至CAS登录界面；</p>\n<p>在前后端分离的项目中，请求前端工程时，需要前端主动发起请求，判断登录状态，如未登录由前端重定向至CAS登录界面（后端返回指定错误码）；</p>\n<p>在前端应用加载时就发起请求验证登录状态，可以在main.js中进行；如果未登录重定向至登录界面；<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">axios(&#123;method: <span class=\"string\">'post'</span>, url: <span class=\"string\">'/y/adm/market/sso/asynchronLoginCheckServlet'</span>, data: &#123;&#125;&#125;).<span class=\"keyword\">then</span>((&#123; data &#125;) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (data.code === <span class=\"string\">'009999'</span>) &#123;</span><br><span class=\"line\">    window.location.href = config.domain + <span class=\"string\">'/cas/login?service='</span> + config.retDom + <span class=\"string\">'/market/sso/asynchronLoginResServlet?page='</span> + window.location.origin + <span class=\"string\">'/y/adm/market/index.html'</span>; </span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"菜单初始化\"><a href=\"#菜单初始化\" class=\"headerlink\" title=\"菜单初始化\"></a>菜单初始化</h2><h4 id=\"权限信息获取\"><a href=\"#权限信息获取\" class=\"headerlink\" title=\"权限信息获取\"></a>权限信息获取</h4><p>登录成功后，后端应用的session中会保存当前登录用户的基本信息和权限信息；后端提供接口，在登录成功后获取session中的信息，数据结构如下：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"string\">\"data\"</span>:</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"string\">\"authority\"</span>:[],   //url权限列表</span><br><span class=\"line\">\t\t<span class=\"string\">\"contactPhone\"</span>:<span class=\"string\">\"13934900000\"</span>,   </span><br><span class=\"line\">\t\t<span class=\"string\">\"loginNo\"</span>:<span class=\"string\">\"admin\"</span>  //登录账号</span><br><span class=\"line\">\t&#125;,</span><br><span class=\"line\">\t<span class=\"string\">\"retCode\"</span>:<span class=\"string\">\"0000\"</span>,</span><br><span class=\"line\">\t<span class=\"string\">\"retMsg\"</span>:<span class=\"string\">\"OK\"</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"菜单列表查询\"><a href=\"#菜单列表查询\" class=\"headerlink\" title=\"菜单列表查询\"></a>菜单列表查询</h4><p>采用基础域的权限模型</p>\n<h4 id=\"补充查询sql，画一下UML图\"><a href=\"#补充查询sql，画一下UML图\" class=\"headerlink\" title=\"补充查询sql，画一下UML图\"></a>补充查询sql，画一下UML图</h4><h4 id=\"初始化菜单\"><a href=\"#初始化菜单\" class=\"headerlink\" title=\"初始化菜单\"></a>初始化菜单</h4><p>拿到全量的菜单信息后，根据权限信息进行过滤，将没有权限的菜单剔除掉：</p>\n<p>权限信息查询和菜单查询需要放在登录后进行，并且需要在权限获取后再进行菜单查询，否则在菜单渲染时，会出现权限列表尚未获取情况，导致菜单未经过滤全部展示出来；</p>\n<p>因此权限信息获取接口和菜单列表接口需要处理竞态，竞态的处理建议放在同一个action中来做，如果写成两个action，处理竞态要麻烦很多；<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">async fetchUserInfo (&#123; commit &#125;, payload) &#123;</span><br><span class=\"line\">  <span class=\"built_in\">let</span> response = null</span><br><span class=\"line\">  <span class=\"built_in\">let</span> response1 = null</span><br><span class=\"line\">  try &#123;</span><br><span class=\"line\">    response = await initBase(&#123;&#125;)</span><br><span class=\"line\">    response1 = await qryMenu(&#123;&#125;)</span><br><span class=\"line\">    response.data.menuList = response1.data</span><br><span class=\"line\">    <span class=\"built_in\">let</span> rou = initAuthority(response.data)</span><br><span class=\"line\">    commit(<span class=\"string\">'SET_USER_BASE_INFO'</span>, response.data)</span><br><span class=\"line\">    <span class=\"built_in\">return</span> rou</span><br><span class=\"line\">  &#125; catch (err) &#123;</span><br><span class=\"line\">    console.error(err)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>initAuthority方法处理三件事：<br>1、过滤menuList中没有权限的menu；<br>2、根据权限生成路由对象；<br>3、区分出内链和外链（系统内菜单还是系统外菜单）；<br>这里需要注意一点，为了菜单是系统内还是系统外，录入菜单url时，需要录入完整的url，<br>例如：<a href=\"http://xxx/111/222.html#333\" target=\"_blank\" rel=\"noopener\">http://xxx/111/222.html#333</a><br>由于系统的上下文不同，在处理时根据本系统的上下文来区分，是本系统的上下文，则只保留路由部分；非本系统则保留完整的url；<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">data.menuList.filter(<span class=\"keyword\">function</span> (x) &#123;</span><br><span class=\"line\">  x.childPortalNavs = x.childPortalNavs.filter(<span class=\"keyword\">function</span> (y) &#123;</span><br><span class=\"line\">    y.childPortalNavs = y.childPortalNavs.map(<span class=\"keyword\">function</span> (z) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (z.appVersionUrl.indexOf(config.host) &gt; -1) &#123;</span><br><span class=\"line\">        z.appVersionUrl = z.appVersionUrl.split(<span class=\"string\">'#'</span>)[1]</span><br><span class=\"line\">        z.out = <span class=\"literal\">false</span></span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        z.out = <span class=\"literal\">true</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"built_in\">return</span> z</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    <span class=\"built_in\">return</span> y.childPortalNavs.length &gt; 0</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  <span class=\"built_in\">return</span> x.childPortalNavs.length &gt; 0</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure></p>\n<p>commit设置status中的变量：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">'SET_USER_BASE_INFO'</span> (state, payload) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">let</span> &#123;loginNo, contactPhone, authority, menuList&#125; = payload</span><br><span class=\"line\">    state.userBase.name = loginNo</span><br><span class=\"line\">    state.userBase.phone = contactPhone</span><br><span class=\"line\">    state.userBase.authority = authority</span><br><span class=\"line\">    state.menuList = menuList</span><br><span class=\"line\">  &#125;,</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"Router（路由）管理\"><a href=\"#Router（路由）管理\" class=\"headerlink\" title=\"Router（路由）管理\"></a>Router（路由）管理</h4><p>路由管理就是说，可访问的路由要和菜单保持一致；<br>但是vue-router的实例，在new vue实例的时候，就加载了，且必须加载，这个时候，登录路由一定要加载，可是这个时候没有登录，无法确定权限</p>\n<p>解决思路很简单，菜单和路由同步，肯定是采用了vuex，一开始的思路的是，在一开始，就把所有的路由规则加载，然后在登录的时候，取得权限路由，对比两个路由，通过修改修改一个权限字段来隐藏菜单，如果在后台页面添加了新菜单规则，路由是按模块加载的不同的文件，这时对路由的文件进行新的读写，虽然可以解决问题，但是如果手动在浏览器地址上路由，依然可以访问，所以在路由的全局钩子上还要做拦截。</p>\n<p>上面的思路可以解决问题，但是很繁琐；</p>\n<p>幸运的是VUE在2.2版本以后，官方新增了api，addRoutes，专门针对服务端渲染路由，那么这下问题就比较简单了；</p>\n<p>在前面initAuthority方法中，我们已经拿到了经过权限过滤的菜单列表了，只要再把列表中属于系统内的菜单生成路由对象，通过addRoutes动态加载到路由中就可以了；<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">const checkMenus = <span class=\"keyword\">function</span> (data) &#123;</span><br><span class=\"line\">  data.menuList.forEach(<span class=\"keyword\">function</span> (x) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (x.childPortalNavs.length &gt; 0) &#123;</span><br><span class=\"line\">      x.childPortalNavs.forEach(<span class=\"keyword\">function</span> (y) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (y.childPortalNavs.length &gt; 0) &#123;</span><br><span class=\"line\">          y.childPortalNavs.forEach(<span class=\"keyword\">function</span> (z) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!z.out) &#123;</span><br><span class=\"line\">              rou.children.push(&#123;</span><br><span class=\"line\">                path: z.appVersionUrl,</span><br><span class=\"line\">                name: z.naviName,</span><br><span class=\"line\">                component: componentMap[z.appVersionUrl]</span><br><span class=\"line\">              &#125;)</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">          &#125;)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  <span class=\"built_in\">return</span> rou</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>前面的代码中，initAuthority方法返回的就是生成的路由对象：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">store.dispatch(<span class=\"string\">'easyMarketing/fetchUserInfo'</span>, null, &#123; root: <span class=\"literal\">true</span> &#125;).<span class=\"keyword\">then</span>(rou =&gt; &#123;</span><br><span class=\"line\">   router.addRoutes([rou])</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"菜单渲染\"><a href=\"#菜单渲染\" class=\"headerlink\" title=\"菜单渲染\"></a>菜单渲染</h4><p>菜单根据menuList渲染即可，渲染时根据是否系统外菜单增加a标签<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;el-menu-item :index=<span class=\"string\">\"item2.out ? '' : item2.appVersionUrl\"</span> v-for=<span class=\"string\">\"item2 in item1.childPortalNavs\"</span> :key=<span class=\"string\">\"item2.naviId\"</span>&gt;</span><br><span class=\"line\">  &lt;a :href=<span class=\"string\">\"item2.appVersionUrl\"</span> v-if=<span class=\"string\">\"item2.out\"</span> style=<span class=\"string\">\"color:rgb(143, 151, 161);\"</span>&gt;</span><br><span class=\"line\">    &#123;&#123;item2.naviName&#125;&#125;</span><br><span class=\"line\">  &lt;/a&gt;</span><br><span class=\"line\">  &lt;a style=<span class=\"string\">\"color:rgb(143, 151, 161);\"</span> v-else&gt;</span><br><span class=\"line\">    &#123;&#123;item2.naviName&#125;&#125;</span><br><span class=\"line\">  &lt;/a&gt;</span><br><span class=\"line\">&lt;/el-menu-item&gt;</span><br></pre></td></tr></table></figure></p>\n<p>需要注意一点：渲染时，系统外的菜单，菜单路由要为空，否则会出现先切换路由再触发a标签的跳转，浏览器选择上一步时就会出现空页面；</p>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>1、菜单结构保持3级，只有最小级的菜单有访问路由；<br>2、根据系统上下文区分菜单是否本系统菜单；<br>3、使用addRoutes动态生成路由，保证路由和菜单的一致性，没有权限的菜单即使知道路由也无法访问；<br>4、权限信息查询和菜单查询要放在一个action中查，使用异步开发手段处理好竞态；<br>5、外链菜单渲染时路由参数置空，保证系统间切换的一致性性；</p>\n<h5 id=\"此方案可复用至多个前端系统共享菜单的场景，菜单管理只需要在基础域中进行配置，前端工程无需改造；\"><a href=\"#此方案可复用至多个前端系统共享菜单的场景，菜单管理只需要在基础域中进行配置，前端工程无需改造；\" class=\"headerlink\" title=\"此方案可复用至多个前端系统共享菜单的场景，菜单管理只需要在基础域中进行配置，前端工程无需改造；\"></a>此方案可复用至多个前端系统共享菜单的场景，菜单管理只需要在基础域中进行配置，前端工程无需改造；</h5>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"基于vue的管理系统的权限管控方案\"><a href=\"#基于vue的管理系统的权限管控方案\" class=\"headerlink\" title=\"基于vue的管理系统的权限管控方案\"></a>基于vue的管理系统的权限管控方案</h1><p>近期在做后台管理系统，前端是vue + vue-router + vuex + webpack实现的spa应用；管理系统中有可视化编辑、工作流、运营数据、报表等不同的能力，需要开放给不同的用户角色使用，因此需要对菜单进行权限控制；</p>\n<p>还有一些特殊的情况，由于运营数据和可视化配置是两个前端应用，展示效果是统一的，技术栈也相同（vue…），但是需要统一进行登录和权限管理；（后期也可能会有更多这样的情况，如：报表系统）</p>\n<p>最终想要达到的目标：</p>\n<ol>\n<li>不同用户登录后看到的菜单不同；</li>\n<li>多个前端系统的菜单统一</li>\n<li>系统内的菜单是路由访问，系统外的菜单使用外链跳转；</li>\n<li>即使用户保存了前端路由，没有权限也无法访问；</li>\n</ol>\n<h2 id=\"设计方案\"><a href=\"#设计方案\" class=\"headerlink\" title=\"设计方案\"></a>设计方案</h2><h6 id=\"时序图\"><a href=\"#时序图\" class=\"headerlink\" title=\"时序图\"></a>时序图</h6><p><img src=\"/blog/2018/05/14/基于vue的管理系统权限管控方案/SequenceDiagram.png\" alt=\"时序图\"></p>\n<p>登录和权限管理我们有现成的产品，CAS+基础域；集成CAS后，即可通过基础域来管理角色和权限；因此方案是根据CAS和基础域来设计的；</p>\n<ul>\n<li>首先，前端需要获取到当前登录的用户和权限；登录后，后端的session中是保存有用户信息和权限信息的，需要增加一个接口为前端返回这些信息；</li>\n<li>第二：菜单需要根据权限信息展示，而基础域返回的权限信息只有url；因此需要现有全量的菜单，再根据权限做交集处理；最开始计划全量菜单写在前端工程里，但后续增加菜单需要在每个系统都做一次修改，不合理；基础域中导航管理模块的数据结构正好能满足要求，计划将菜单通过基础域配置，提供接口返回给前端使用，这样的话菜单也可以通过可视化配置，避免了频繁的开发上线；</li>\n<li>第三：区分路由还是外链，在配置时统一配置完整的url，包含请求路径和hash值，在每个前端系统中配置自己的上下文，查询出的菜单与当前系统的上下文相同时，即为内部访问路由；如果不相同则表示外链</li>\n<li>第四：VUE路由通过权限信息来生成，没有权限则没有路由，即使之前保存了路由也无法访问；保证了安全性；<br><img src=\"/blog/2018/05/14/基于vue的管理系统权限管控方案/menu.jpg\" alt=\"渲染菜单\"></li>\n</ul>\n<p>在具体实现过程中，踩了不少坑，下面我将详细讲述下实现过程中的关键点：</p>\n<h2 id=\"集成CAS\"><a href=\"#集成CAS\" class=\"headerlink\" title=\"集成CAS\"></a>集成CAS</h2><p>登录的部分采用现有的CAS产品；CAS是SpringMVC架构实现的单点登录应用，有独立的登录界面，通过在目标应用的web.xml中配置过滤器、集成jar包的方式，在目标应用收到请求时，向CAS系统发起验证登录请求，如未登录则拦截请求，重定向至CAS登录界面；</p>\n<p>在前后端分离的项目中，请求前端工程时，需要前端主动发起请求，判断登录状态，如未登录由前端重定向至CAS登录界面（后端返回指定错误码）；</p>\n<p>在前端应用加载时就发起请求验证登录状态，可以在main.js中进行；如果未登录重定向至登录界面；<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">axios(&#123;method: <span class=\"string\">'post'</span>, url: <span class=\"string\">'/y/adm/market/sso/asynchronLoginCheckServlet'</span>, data: &#123;&#125;&#125;).<span class=\"keyword\">then</span>((&#123; data &#125;) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (data.code === <span class=\"string\">'009999'</span>) &#123;</span><br><span class=\"line\">    window.location.href = config.domain + <span class=\"string\">'/cas/login?service='</span> + config.retDom + <span class=\"string\">'/market/sso/asynchronLoginResServlet?page='</span> + window.location.origin + <span class=\"string\">'/y/adm/market/index.html'</span>; </span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"菜单初始化\"><a href=\"#菜单初始化\" class=\"headerlink\" title=\"菜单初始化\"></a>菜单初始化</h2><h4 id=\"权限信息获取\"><a href=\"#权限信息获取\" class=\"headerlink\" title=\"权限信息获取\"></a>权限信息获取</h4><p>登录成功后，后端应用的session中会保存当前登录用户的基本信息和权限信息；后端提供接口，在登录成功后获取session中的信息，数据结构如下：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"string\">\"data\"</span>:</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"string\">\"authority\"</span>:[],   //url权限列表</span><br><span class=\"line\">\t\t<span class=\"string\">\"contactPhone\"</span>:<span class=\"string\">\"13934900000\"</span>,   </span><br><span class=\"line\">\t\t<span class=\"string\">\"loginNo\"</span>:<span class=\"string\">\"admin\"</span>  //登录账号</span><br><span class=\"line\">\t&#125;,</span><br><span class=\"line\">\t<span class=\"string\">\"retCode\"</span>:<span class=\"string\">\"0000\"</span>,</span><br><span class=\"line\">\t<span class=\"string\">\"retMsg\"</span>:<span class=\"string\">\"OK\"</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"菜单列表查询\"><a href=\"#菜单列表查询\" class=\"headerlink\" title=\"菜单列表查询\"></a>菜单列表查询</h4><p>采用基础域的权限模型</p>\n<h4 id=\"补充查询sql，画一下UML图\"><a href=\"#补充查询sql，画一下UML图\" class=\"headerlink\" title=\"补充查询sql，画一下UML图\"></a>补充查询sql，画一下UML图</h4><h4 id=\"初始化菜单\"><a href=\"#初始化菜单\" class=\"headerlink\" title=\"初始化菜单\"></a>初始化菜单</h4><p>拿到全量的菜单信息后，根据权限信息进行过滤，将没有权限的菜单剔除掉：</p>\n<p>权限信息查询和菜单查询需要放在登录后进行，并且需要在权限获取后再进行菜单查询，否则在菜单渲染时，会出现权限列表尚未获取情况，导致菜单未经过滤全部展示出来；</p>\n<p>因此权限信息获取接口和菜单列表接口需要处理竞态，竞态的处理建议放在同一个action中来做，如果写成两个action，处理竞态要麻烦很多；<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">async fetchUserInfo (&#123; commit &#125;, payload) &#123;</span><br><span class=\"line\">  <span class=\"built_in\">let</span> response = null</span><br><span class=\"line\">  <span class=\"built_in\">let</span> response1 = null</span><br><span class=\"line\">  try &#123;</span><br><span class=\"line\">    response = await initBase(&#123;&#125;)</span><br><span class=\"line\">    response1 = await qryMenu(&#123;&#125;)</span><br><span class=\"line\">    response.data.menuList = response1.data</span><br><span class=\"line\">    <span class=\"built_in\">let</span> rou = initAuthority(response.data)</span><br><span class=\"line\">    commit(<span class=\"string\">'SET_USER_BASE_INFO'</span>, response.data)</span><br><span class=\"line\">    <span class=\"built_in\">return</span> rou</span><br><span class=\"line\">  &#125; catch (err) &#123;</span><br><span class=\"line\">    console.error(err)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>initAuthority方法处理三件事：<br>1、过滤menuList中没有权限的menu；<br>2、根据权限生成路由对象；<br>3、区分出内链和外链（系统内菜单还是系统外菜单）；<br>这里需要注意一点，为了菜单是系统内还是系统外，录入菜单url时，需要录入完整的url，<br>例如：<a href=\"http://xxx/111/222.html#333\" target=\"_blank\" rel=\"noopener\">http://xxx/111/222.html#333</a><br>由于系统的上下文不同，在处理时根据本系统的上下文来区分，是本系统的上下文，则只保留路由部分；非本系统则保留完整的url；<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">data.menuList.filter(<span class=\"keyword\">function</span> (x) &#123;</span><br><span class=\"line\">  x.childPortalNavs = x.childPortalNavs.filter(<span class=\"keyword\">function</span> (y) &#123;</span><br><span class=\"line\">    y.childPortalNavs = y.childPortalNavs.map(<span class=\"keyword\">function</span> (z) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (z.appVersionUrl.indexOf(config.host) &gt; -1) &#123;</span><br><span class=\"line\">        z.appVersionUrl = z.appVersionUrl.split(<span class=\"string\">'#'</span>)[1]</span><br><span class=\"line\">        z.out = <span class=\"literal\">false</span></span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        z.out = <span class=\"literal\">true</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"built_in\">return</span> z</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    <span class=\"built_in\">return</span> y.childPortalNavs.length &gt; 0</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  <span class=\"built_in\">return</span> x.childPortalNavs.length &gt; 0</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure></p>\n<p>commit设置status中的变量：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">'SET_USER_BASE_INFO'</span> (state, payload) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">let</span> &#123;loginNo, contactPhone, authority, menuList&#125; = payload</span><br><span class=\"line\">    state.userBase.name = loginNo</span><br><span class=\"line\">    state.userBase.phone = contactPhone</span><br><span class=\"line\">    state.userBase.authority = authority</span><br><span class=\"line\">    state.menuList = menuList</span><br><span class=\"line\">  &#125;,</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"Router（路由）管理\"><a href=\"#Router（路由）管理\" class=\"headerlink\" title=\"Router（路由）管理\"></a>Router（路由）管理</h4><p>路由管理就是说，可访问的路由要和菜单保持一致；<br>但是vue-router的实例，在new vue实例的时候，就加载了，且必须加载，这个时候，登录路由一定要加载，可是这个时候没有登录，无法确定权限</p>\n<p>解决思路很简单，菜单和路由同步，肯定是采用了vuex，一开始的思路的是，在一开始，就把所有的路由规则加载，然后在登录的时候，取得权限路由，对比两个路由，通过修改修改一个权限字段来隐藏菜单，如果在后台页面添加了新菜单规则，路由是按模块加载的不同的文件，这时对路由的文件进行新的读写，虽然可以解决问题，但是如果手动在浏览器地址上路由，依然可以访问，所以在路由的全局钩子上还要做拦截。</p>\n<p>上面的思路可以解决问题，但是很繁琐；</p>\n<p>幸运的是VUE在2.2版本以后，官方新增了api，addRoutes，专门针对服务端渲染路由，那么这下问题就比较简单了；</p>\n<p>在前面initAuthority方法中，我们已经拿到了经过权限过滤的菜单列表了，只要再把列表中属于系统内的菜单生成路由对象，通过addRoutes动态加载到路由中就可以了；<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">const checkMenus = <span class=\"keyword\">function</span> (data) &#123;</span><br><span class=\"line\">  data.menuList.forEach(<span class=\"keyword\">function</span> (x) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (x.childPortalNavs.length &gt; 0) &#123;</span><br><span class=\"line\">      x.childPortalNavs.forEach(<span class=\"keyword\">function</span> (y) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (y.childPortalNavs.length &gt; 0) &#123;</span><br><span class=\"line\">          y.childPortalNavs.forEach(<span class=\"keyword\">function</span> (z) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!z.out) &#123;</span><br><span class=\"line\">              rou.children.push(&#123;</span><br><span class=\"line\">                path: z.appVersionUrl,</span><br><span class=\"line\">                name: z.naviName,</span><br><span class=\"line\">                component: componentMap[z.appVersionUrl]</span><br><span class=\"line\">              &#125;)</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">          &#125;)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  <span class=\"built_in\">return</span> rou</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>前面的代码中，initAuthority方法返回的就是生成的路由对象：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">store.dispatch(<span class=\"string\">'easyMarketing/fetchUserInfo'</span>, null, &#123; root: <span class=\"literal\">true</span> &#125;).<span class=\"keyword\">then</span>(rou =&gt; &#123;</span><br><span class=\"line\">   router.addRoutes([rou])</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"菜单渲染\"><a href=\"#菜单渲染\" class=\"headerlink\" title=\"菜单渲染\"></a>菜单渲染</h4><p>菜单根据menuList渲染即可，渲染时根据是否系统外菜单增加a标签<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;el-menu-item :index=<span class=\"string\">\"item2.out ? '' : item2.appVersionUrl\"</span> v-for=<span class=\"string\">\"item2 in item1.childPortalNavs\"</span> :key=<span class=\"string\">\"item2.naviId\"</span>&gt;</span><br><span class=\"line\">  &lt;a :href=<span class=\"string\">\"item2.appVersionUrl\"</span> v-if=<span class=\"string\">\"item2.out\"</span> style=<span class=\"string\">\"color:rgb(143, 151, 161);\"</span>&gt;</span><br><span class=\"line\">    &#123;&#123;item2.naviName&#125;&#125;</span><br><span class=\"line\">  &lt;/a&gt;</span><br><span class=\"line\">  &lt;a style=<span class=\"string\">\"color:rgb(143, 151, 161);\"</span> v-else&gt;</span><br><span class=\"line\">    &#123;&#123;item2.naviName&#125;&#125;</span><br><span class=\"line\">  &lt;/a&gt;</span><br><span class=\"line\">&lt;/el-menu-item&gt;</span><br></pre></td></tr></table></figure></p>\n<p>需要注意一点：渲染时，系统外的菜单，菜单路由要为空，否则会出现先切换路由再触发a标签的跳转，浏览器选择上一步时就会出现空页面；</p>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>1、菜单结构保持3级，只有最小级的菜单有访问路由；<br>2、根据系统上下文区分菜单是否本系统菜单；<br>3、使用addRoutes动态生成路由，保证路由和菜单的一致性，没有权限的菜单即使知道路由也无法访问；<br>4、权限信息查询和菜单查询要放在一个action中查，使用异步开发手段处理好竞态；<br>5、外链菜单渲染时路由参数置空，保证系统间切换的一致性性；</p>\n<h5 id=\"此方案可复用至多个前端系统共享菜单的场景，菜单管理只需要在基础域中进行配置，前端工程无需改造；\"><a href=\"#此方案可复用至多个前端系统共享菜单的场景，菜单管理只需要在基础域中进行配置，前端工程无需改造；\" class=\"headerlink\" title=\"此方案可复用至多个前端系统共享菜单的场景，菜单管理只需要在基础域中进行配置，前端工程无需改造；\"></a>此方案可复用至多个前端系统共享菜单的场景，菜单管理只需要在基础域中进行配置，前端工程无需改造；</h5>"},{"title":"可视化编辑系统实践1","date":"2018-05-29T18:42:19.000Z","_content":"这篇我想写写可视化编辑系统的实践，重点在数据模型，静态化，工作流，预览等一系列系统功能的实践上，具体的可视化编辑功能，将另开一贴来介绍；\n\n背景\n---\n前端工程中，有一些页面涉及运营位，根据市场的变化以及运营的要求，需要频繁的更迭，开发人员需要频繁的修改上线；由于生产环境的安全限制，手动上线费时费力，还需要走更多的流程（打申请，写文档，等审批），占用了大量的时间确不能产生多少价值；\n\nCMS\n---\n传统的解决方案就是采用内容管理平台，运营人员通过CMS来修改，发布内容，包括文字，图片，表格等等一切想要发布的信息；CMS系统把数据和模板结合起来，静态化生成HTML页面或代码块，通过ftp协议上传到前端应用中，供项目使用；\n\nCMS解决了2个问题：\n1、没有技术门槛，运营人员可通过界面操作来修改运营位内容；\n2、不需要手动上线，ftp一键上传；也省去了复杂的上线流程；\n\n使用CMS系统，解放了开发人员一部分时间，迭代效率提升不少；\n\nCMS系统已经向前迈了一大步，但仍存在不少问题：\n1、比较笨重，有一定的门槛，需要有一个熟练的操作人员；\n2、CMS一般有复杂的数据结构，需要把每一个图片，文字都对应到一个数据库字段中；维护相对困难；\n3、有一些抽象概念（栏目、内容...）；推广困难（用户有意向主动使用，但培训了多次，效果不佳，一直没有交出去）\n4、模板复用率低，一旦有结构型的变化，需要开发人员修改模板；\n\n\n为了能更方便的进行页面的编辑发布，可视化编辑的方案被提上日志\n\n设计思路\n---\n最初的想法是复用CMS的数据结构，静态化的部分也可以复用；但这么做需要先把CMS的数据模型梳理出来，并且CMS本身不是前后端分离的架构，接口层需要重新开发；这样rest层需要针对不同的前端场景提供各种接口，多表关联的处理太多，rest层的开发将会非常复杂；还有，本次可视化的要求除了，编辑文字图片外，还要有“楼层”（首页的瀑布式结构）的处理（增加，删除，排序）甚至有“楼中楼”的情况，CMS的数据模型难以表达出楼层概念；\n\n如果把每一个页面元素都和数据库对应起来的话，整个系统会显得非常笨重，耦合度非常高，难以扩展，前端和后端的都不灵活；因此我们考虑，数据库只存储必要的信息，不记录所有的前端元素，只记录编辑完成的结果；\n\n前端编辑过程不和后端交互，编辑结束后，将最终的html代码段存储在数据库中，后端根据代码段来静态化生成页面，这样编辑的过程完全有前端工程去处理，这样更灵活也更轻量；\n\n但是这样做有一个难点：当下一次来编辑时，需要依据html代码块还原成可编辑的模板；之前保存在数据库中的是html代码的字符串，要把它还原成可编辑的模板，非常麻烦；\n\n为此，我们将可编辑的数据以一个json对象的形式存储在数据库中，下一次编辑时，前端通过json数据，结合VUE组件，渲染出可编辑界面；\n\n###具体的过程如下：\n1、管理员访问后台编辑系统时，首先从数据库中查询出默认的json串，这个json串是初始化系统时录入的；前端根据json串，还原出可编辑界面；\n2、管理员操作可编辑界面，前端记录修改，在保存时，把json串和html代码块一起存储在数据库中；\n3、后端根据html代码块生成页面，并推送到前端工程使用；\n\n前端处理json数据，并实现可视化操作，仍需要进行大量的处理，这块的细节可以查看lihao的帖子：\nxxxxxxxxxxxxxx\n\n最后决定，除了记录一些页面的固有信息，只存储json数据和html代码块，json用作还原可视化编辑界面，html代码块用来静态化生成页面；\n\n数据模型：\n---\n```bash\n  id    主键  ,\n  name   生成页名称  ,\n  area_code    地市  ,\n  type   类型 1:首页 2:地市专项  ,\n  json   json数据  ,\n  code   html代码块  ,\n  create_time   创建时间  ,\n  update_time   更新时间  ,\n  update_login_no   更新操作工号  ,\n  status   状态(0：编辑完成，1：审批中，2：审批完成，-1：被打回，9：生效，-9：失效)  ,\n  channels   发布渠道  ,\n  access_url 静态化页面路径,\n  remark1   备用字段1  ,\n  remark2   备用字段2  ,\n```\n\n工作流\n---\n根据用户的要求，可视化操作需要有审批流程，具体的审批流程是：\n1、地市发布人员--地市审批人员--省公司审批人员\n2、省公司发布人员--省公司审批人员\n并且，不同地市间，审批人员和发布人员不能交叉：\n![审批关系图](approvalProcess.jpg)\n\n工作流系统采用，Activity工作流系统\n\n其中工作流角色，采用基础域中的角色数据模型，分别定义四个角色，地市发布人员，地市审批人员，省公司审批人员和省公司审批人员；\n\n工作流对接到后台系统中，出现很多特殊的情况：\n1、不同地市的审批如何避免交叉？\n2、部分VIP工号要求既有发布权限，又有审批角色，当一个工号存在与统一审批流程中的多个角色中时，如何处理？\n3、当某个工号同时在多个工作流的角色中时，如何避免在指定下一步审批人时，不会把其他工作流的审批人也展示出来？\n\n解决这些问题的思路，可以看一下fengchao的帖子：\nxxxxxxxxxxxxxxxxx\n\n我这里说一下前端的设计；\n前端跟工作流相关的有两个模块，一个是发布管理，一个是审批管理\n发布管理包含6个状态，\n1、待审批（完成可视化编辑，但未点击“发起审批”，此状态时仍可以修改配置信息）\n2、审批中（即等待审批的配置信息，提供审批提醒功能）\n3、被打回 审批不通过的配置信息）\n4、审批完成（审批通过的配置信息，运营人员可点击“发布”按钮，正式发布）\n5、已上线（审批通过后，在待发布列表点击发布按钮后，状态变更为已上线）\n6、已结束（到达活动结束时间或者手动点击“结束活动”的配置信息。此状态下提供“下线”按钮）\n\n对应在数据库的state   0：编辑完成，1：审批中，2：审批完成，-1：被打回，9：生效，-9：失效\n\n不同的status，对应着不同的操作，这里是由前端自己来管理，如下图：\n![发布管理](issue.jpg)\n\n审批管理：\n只有在状态为1（审批中）时，这条记录会出现在审批管理中；\n审批管理提供，预览、打回、通过三个状态，如下图：\n![审批管理](approval.jpg)\n\n可以看到，审批管理和发布管理涉及的可操作按钮有：`预览`，`编辑`，`发起审批`，`打回`，`通过`，`发布`，`活动下线`\n除了预览和编辑，其它操作都会改变status；\n\n预览\n---\n可视化编辑后，操作人员如何确认自己修改是否生效？审批人员依据什么来确认发布人员的操作是否正确？预览的功能必不可少；\n\n一般预览的思路是静态化后打开页面查看效果，但是本次可视化系统，编辑后并非完整的页面，只是一段代码块，那么预览就必须要依赖于前端工程；为了预览重新搭建一个前端工程显然不值得，那么灰度环境是个非常好的选择；\n\n但是前端工程是根据手机号来进行灰度的，如果发布人员和审批人员的手机号不在配置列表中，就无法访问灰度环境；\n\n因此，在灰度管理平台中增加了一个默认的号码，当cookie中存在该号码时，将被代理至灰度环境；\n\n###二维码\n预览链接通过二维码的方式显示出来，发布人员和审批人员只需要扫描二维码即可预览编辑后的界面；\n审批管理中的预览：\n![预览](preview.jpg)\n\n保存成功后，同样会弹出二维码，提示预览测试：\n![预览](preview2.jpg)\n\n有了预览功能，整个工作流就可以形成完整的闭环；\n![工作流](workflow.png)\n\n\n\n\n工作流、预览，资源库管理、ftp推送、静态化\n\n","source":"_posts/可视化编辑系统实践.md","raw":"---\ntitle: 可视化编辑系统实践1\ndate: 2018-05-29 18:42:19\ntags:\n---\n这篇我想写写可视化编辑系统的实践，重点在数据模型，静态化，工作流，预览等一系列系统功能的实践上，具体的可视化编辑功能，将另开一贴来介绍；\n\n背景\n---\n前端工程中，有一些页面涉及运营位，根据市场的变化以及运营的要求，需要频繁的更迭，开发人员需要频繁的修改上线；由于生产环境的安全限制，手动上线费时费力，还需要走更多的流程（打申请，写文档，等审批），占用了大量的时间确不能产生多少价值；\n\nCMS\n---\n传统的解决方案就是采用内容管理平台，运营人员通过CMS来修改，发布内容，包括文字，图片，表格等等一切想要发布的信息；CMS系统把数据和模板结合起来，静态化生成HTML页面或代码块，通过ftp协议上传到前端应用中，供项目使用；\n\nCMS解决了2个问题：\n1、没有技术门槛，运营人员可通过界面操作来修改运营位内容；\n2、不需要手动上线，ftp一键上传；也省去了复杂的上线流程；\n\n使用CMS系统，解放了开发人员一部分时间，迭代效率提升不少；\n\nCMS系统已经向前迈了一大步，但仍存在不少问题：\n1、比较笨重，有一定的门槛，需要有一个熟练的操作人员；\n2、CMS一般有复杂的数据结构，需要把每一个图片，文字都对应到一个数据库字段中；维护相对困难；\n3、有一些抽象概念（栏目、内容...）；推广困难（用户有意向主动使用，但培训了多次，效果不佳，一直没有交出去）\n4、模板复用率低，一旦有结构型的变化，需要开发人员修改模板；\n\n\n为了能更方便的进行页面的编辑发布，可视化编辑的方案被提上日志\n\n设计思路\n---\n最初的想法是复用CMS的数据结构，静态化的部分也可以复用；但这么做需要先把CMS的数据模型梳理出来，并且CMS本身不是前后端分离的架构，接口层需要重新开发；这样rest层需要针对不同的前端场景提供各种接口，多表关联的处理太多，rest层的开发将会非常复杂；还有，本次可视化的要求除了，编辑文字图片外，还要有“楼层”（首页的瀑布式结构）的处理（增加，删除，排序）甚至有“楼中楼”的情况，CMS的数据模型难以表达出楼层概念；\n\n如果把每一个页面元素都和数据库对应起来的话，整个系统会显得非常笨重，耦合度非常高，难以扩展，前端和后端的都不灵活；因此我们考虑，数据库只存储必要的信息，不记录所有的前端元素，只记录编辑完成的结果；\n\n前端编辑过程不和后端交互，编辑结束后，将最终的html代码段存储在数据库中，后端根据代码段来静态化生成页面，这样编辑的过程完全有前端工程去处理，这样更灵活也更轻量；\n\n但是这样做有一个难点：当下一次来编辑时，需要依据html代码块还原成可编辑的模板；之前保存在数据库中的是html代码的字符串，要把它还原成可编辑的模板，非常麻烦；\n\n为此，我们将可编辑的数据以一个json对象的形式存储在数据库中，下一次编辑时，前端通过json数据，结合VUE组件，渲染出可编辑界面；\n\n###具体的过程如下：\n1、管理员访问后台编辑系统时，首先从数据库中查询出默认的json串，这个json串是初始化系统时录入的；前端根据json串，还原出可编辑界面；\n2、管理员操作可编辑界面，前端记录修改，在保存时，把json串和html代码块一起存储在数据库中；\n3、后端根据html代码块生成页面，并推送到前端工程使用；\n\n前端处理json数据，并实现可视化操作，仍需要进行大量的处理，这块的细节可以查看lihao的帖子：\nxxxxxxxxxxxxxx\n\n最后决定，除了记录一些页面的固有信息，只存储json数据和html代码块，json用作还原可视化编辑界面，html代码块用来静态化生成页面；\n\n数据模型：\n---\n```bash\n  id    主键  ,\n  name   生成页名称  ,\n  area_code    地市  ,\n  type   类型 1:首页 2:地市专项  ,\n  json   json数据  ,\n  code   html代码块  ,\n  create_time   创建时间  ,\n  update_time   更新时间  ,\n  update_login_no   更新操作工号  ,\n  status   状态(0：编辑完成，1：审批中，2：审批完成，-1：被打回，9：生效，-9：失效)  ,\n  channels   发布渠道  ,\n  access_url 静态化页面路径,\n  remark1   备用字段1  ,\n  remark2   备用字段2  ,\n```\n\n工作流\n---\n根据用户的要求，可视化操作需要有审批流程，具体的审批流程是：\n1、地市发布人员--地市审批人员--省公司审批人员\n2、省公司发布人员--省公司审批人员\n并且，不同地市间，审批人员和发布人员不能交叉：\n![审批关系图](approvalProcess.jpg)\n\n工作流系统采用，Activity工作流系统\n\n其中工作流角色，采用基础域中的角色数据模型，分别定义四个角色，地市发布人员，地市审批人员，省公司审批人员和省公司审批人员；\n\n工作流对接到后台系统中，出现很多特殊的情况：\n1、不同地市的审批如何避免交叉？\n2、部分VIP工号要求既有发布权限，又有审批角色，当一个工号存在与统一审批流程中的多个角色中时，如何处理？\n3、当某个工号同时在多个工作流的角色中时，如何避免在指定下一步审批人时，不会把其他工作流的审批人也展示出来？\n\n解决这些问题的思路，可以看一下fengchao的帖子：\nxxxxxxxxxxxxxxxxx\n\n我这里说一下前端的设计；\n前端跟工作流相关的有两个模块，一个是发布管理，一个是审批管理\n发布管理包含6个状态，\n1、待审批（完成可视化编辑，但未点击“发起审批”，此状态时仍可以修改配置信息）\n2、审批中（即等待审批的配置信息，提供审批提醒功能）\n3、被打回 审批不通过的配置信息）\n4、审批完成（审批通过的配置信息，运营人员可点击“发布”按钮，正式发布）\n5、已上线（审批通过后，在待发布列表点击发布按钮后，状态变更为已上线）\n6、已结束（到达活动结束时间或者手动点击“结束活动”的配置信息。此状态下提供“下线”按钮）\n\n对应在数据库的state   0：编辑完成，1：审批中，2：审批完成，-1：被打回，9：生效，-9：失效\n\n不同的status，对应着不同的操作，这里是由前端自己来管理，如下图：\n![发布管理](issue.jpg)\n\n审批管理：\n只有在状态为1（审批中）时，这条记录会出现在审批管理中；\n审批管理提供，预览、打回、通过三个状态，如下图：\n![审批管理](approval.jpg)\n\n可以看到，审批管理和发布管理涉及的可操作按钮有：`预览`，`编辑`，`发起审批`，`打回`，`通过`，`发布`，`活动下线`\n除了预览和编辑，其它操作都会改变status；\n\n预览\n---\n可视化编辑后，操作人员如何确认自己修改是否生效？审批人员依据什么来确认发布人员的操作是否正确？预览的功能必不可少；\n\n一般预览的思路是静态化后打开页面查看效果，但是本次可视化系统，编辑后并非完整的页面，只是一段代码块，那么预览就必须要依赖于前端工程；为了预览重新搭建一个前端工程显然不值得，那么灰度环境是个非常好的选择；\n\n但是前端工程是根据手机号来进行灰度的，如果发布人员和审批人员的手机号不在配置列表中，就无法访问灰度环境；\n\n因此，在灰度管理平台中增加了一个默认的号码，当cookie中存在该号码时，将被代理至灰度环境；\n\n###二维码\n预览链接通过二维码的方式显示出来，发布人员和审批人员只需要扫描二维码即可预览编辑后的界面；\n审批管理中的预览：\n![预览](preview.jpg)\n\n保存成功后，同样会弹出二维码，提示预览测试：\n![预览](preview2.jpg)\n\n有了预览功能，整个工作流就可以形成完整的闭环；\n![工作流](workflow.png)\n\n\n\n\n工作流、预览，资源库管理、ftp推送、静态化\n\n","slug":"可视化编辑系统实践","published":1,"updated":"2018-06-03T12:27:18.070Z","_id":"cjhsvkzmg0002j0m23at8s36w","comments":1,"layout":"post","photos":[],"link":"","content":"<p>这篇我想写写可视化编辑系统的实践，重点在数据模型，静态化，工作流，预览等一系列系统功能的实践上，具体的可视化编辑功能，将另开一贴来介绍；</p>\n<h2 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h2><p>前端工程中，有一些页面涉及运营位，根据市场的变化以及运营的要求，需要频繁的更迭，开发人员需要频繁的修改上线；由于生产环境的安全限制，手动上线费时费力，还需要走更多的流程（打申请，写文档，等审批），占用了大量的时间确不能产生多少价值；</p>\n<h2 id=\"CMS\"><a href=\"#CMS\" class=\"headerlink\" title=\"CMS\"></a>CMS</h2><p>传统的解决方案就是采用内容管理平台，运营人员通过CMS来修改，发布内容，包括文字，图片，表格等等一切想要发布的信息；CMS系统把数据和模板结合起来，静态化生成HTML页面或代码块，通过ftp协议上传到前端应用中，供项目使用；</p>\n<p>CMS解决了2个问题：<br>1、没有技术门槛，运营人员可通过界面操作来修改运营位内容；<br>2、不需要手动上线，ftp一键上传；也省去了复杂的上线流程；</p>\n<p>使用CMS系统，解放了开发人员一部分时间，迭代效率提升不少；</p>\n<p>CMS系统已经向前迈了一大步，但仍存在不少问题：<br>1、比较笨重，有一定的门槛，需要有一个熟练的操作人员；<br>2、CMS一般有复杂的数据结构，需要把每一个图片，文字都对应到一个数据库字段中；维护相对困难；<br>3、有一些抽象概念（栏目、内容…）；推广困难（用户有意向主动使用，但培训了多次，效果不佳，一直没有交出去）<br>4、模板复用率低，一旦有结构型的变化，需要开发人员修改模板；</p>\n<p>为了能更方便的进行页面的编辑发布，可视化编辑的方案被提上日志</p>\n<h2 id=\"设计思路\"><a href=\"#设计思路\" class=\"headerlink\" title=\"设计思路\"></a>设计思路</h2><p>最初的想法是复用CMS的数据结构，静态化的部分也可以复用；但这么做需要先把CMS的数据模型梳理出来，并且CMS本身不是前后端分离的架构，接口层需要重新开发；这样rest层需要针对不同的前端场景提供各种接口，多表关联的处理太多，rest层的开发将会非常复杂；还有，本次可视化的要求除了，编辑文字图片外，还要有“楼层”（首页的瀑布式结构）的处理（增加，删除，排序）甚至有“楼中楼”的情况，CMS的数据模型难以表达出楼层概念；</p>\n<p>如果把每一个页面元素都和数据库对应起来的话，整个系统会显得非常笨重，耦合度非常高，难以扩展，前端和后端的都不灵活；因此我们考虑，数据库只存储必要的信息，不记录所有的前端元素，只记录编辑完成的结果；</p>\n<p>前端编辑过程不和后端交互，编辑结束后，将最终的html代码段存储在数据库中，后端根据代码段来静态化生成页面，这样编辑的过程完全有前端工程去处理，这样更灵活也更轻量；</p>\n<p>但是这样做有一个难点：当下一次来编辑时，需要依据html代码块还原成可编辑的模板；之前保存在数据库中的是html代码的字符串，要把它还原成可编辑的模板，非常麻烦；</p>\n<p>为此，我们将可编辑的数据以一个json对象的形式存储在数据库中，下一次编辑时，前端通过json数据，结合VUE组件，渲染出可编辑界面；</p>\n<p>###具体的过程如下：<br>1、管理员访问后台编辑系统时，首先从数据库中查询出默认的json串，这个json串是初始化系统时录入的；前端根据json串，还原出可编辑界面；<br>2、管理员操作可编辑界面，前端记录修改，在保存时，把json串和html代码块一起存储在数据库中；<br>3、后端根据html代码块生成页面，并推送到前端工程使用；</p>\n<p>前端处理json数据，并实现可视化操作，仍需要进行大量的处理，这块的细节可以查看lihao的帖子：<br>xxxxxxxxxxxxxx</p>\n<p>最后决定，除了记录一些页面的固有信息，只存储json数据和html代码块，json用作还原可视化编辑界面，html代码块用来静态化生成页面；</p>\n<h2 id=\"数据模型：\"><a href=\"#数据模型：\" class=\"headerlink\" title=\"数据模型：\"></a>数据模型：</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">id    主键  ,</span><br><span class=\"line\">name   生成页名称  ,</span><br><span class=\"line\">area_code    地市  ,</span><br><span class=\"line\"><span class=\"built_in\">type</span>   类型 1:首页 2:地市专项  ,</span><br><span class=\"line\">json   json数据  ,</span><br><span class=\"line\">code   html代码块  ,</span><br><span class=\"line\">create_time   创建时间  ,</span><br><span class=\"line\">update_time   更新时间  ,</span><br><span class=\"line\">update_login_no   更新操作工号  ,</span><br><span class=\"line\">status   状态(0：编辑完成，1：审批中，2：审批完成，-1：被打回，9：生效，-9：失效)  ,</span><br><span class=\"line\">channels   发布渠道  ,</span><br><span class=\"line\">access_url 静态化页面路径,</span><br><span class=\"line\">remark1   备用字段1  ,</span><br><span class=\"line\">remark2   备用字段2  ,</span><br></pre></td></tr></table></figure>\n<h2 id=\"工作流\"><a href=\"#工作流\" class=\"headerlink\" title=\"工作流\"></a>工作流</h2><p>根据用户的要求，可视化操作需要有审批流程，具体的审批流程是：<br>1、地市发布人员–地市审批人员–省公司审批人员<br>2、省公司发布人员–省公司审批人员<br>并且，不同地市间，审批人员和发布人员不能交叉：<br><img src=\"/blog/2018/05/30/可视化编辑系统实践/approvalProcess.jpg\" alt=\"审批关系图\"></p>\n<p>工作流系统采用，Activity工作流系统</p>\n<p>其中工作流角色，采用基础域中的角色数据模型，分别定义四个角色，地市发布人员，地市审批人员，省公司审批人员和省公司审批人员；</p>\n<p>工作流对接到后台系统中，出现很多特殊的情况：<br>1、不同地市的审批如何避免交叉？<br>2、部分VIP工号要求既有发布权限，又有审批角色，当一个工号存在与统一审批流程中的多个角色中时，如何处理？<br>3、当某个工号同时在多个工作流的角色中时，如何避免在指定下一步审批人时，不会把其他工作流的审批人也展示出来？</p>\n<p>解决这些问题的思路，可以看一下fengchao的帖子：<br>xxxxxxxxxxxxxxxxx</p>\n<p>我这里说一下前端的设计；<br>前端跟工作流相关的有两个模块，一个是发布管理，一个是审批管理<br>发布管理包含6个状态，<br>1、待审批（完成可视化编辑，但未点击“发起审批”，此状态时仍可以修改配置信息）<br>2、审批中（即等待审批的配置信息，提供审批提醒功能）<br>3、被打回 审批不通过的配置信息）<br>4、审批完成（审批通过的配置信息，运营人员可点击“发布”按钮，正式发布）<br>5、已上线（审批通过后，在待发布列表点击发布按钮后，状态变更为已上线）<br>6、已结束（到达活动结束时间或者手动点击“结束活动”的配置信息。此状态下提供“下线”按钮）</p>\n<p>对应在数据库的state   0：编辑完成，1：审批中，2：审批完成，-1：被打回，9：生效，-9：失效</p>\n<p>不同的status，对应着不同的操作，这里是由前端自己来管理，如下图：<br><img src=\"/blog/2018/05/30/可视化编辑系统实践/issue.jpg\" alt=\"发布管理\"></p>\n<p>审批管理：<br>只有在状态为1（审批中）时，这条记录会出现在审批管理中；<br>审批管理提供，预览、打回、通过三个状态，如下图：<br><img src=\"/blog/2018/05/30/可视化编辑系统实践/approval.jpg\" alt=\"审批管理\"></p>\n<p>可以看到，审批管理和发布管理涉及的可操作按钮有：<code>预览</code>，<code>编辑</code>，<code>发起审批</code>，<code>打回</code>，<code>通过</code>，<code>发布</code>，<code>活动下线</code><br>除了预览和编辑，其它操作都会改变status；</p>\n<h2 id=\"预览\"><a href=\"#预览\" class=\"headerlink\" title=\"预览\"></a>预览</h2><p>可视化编辑后，操作人员如何确认自己修改是否生效？审批人员依据什么来确认发布人员的操作是否正确？预览的功能必不可少；</p>\n<p>一般预览的思路是静态化后打开页面查看效果，但是本次可视化系统，编辑后并非完整的页面，只是一段代码块，那么预览就必须要依赖于前端工程；为了预览重新搭建一个前端工程显然不值得，那么灰度环境是个非常好的选择；</p>\n<p>但是前端工程是根据手机号来进行灰度的，如果发布人员和审批人员的手机号不在配置列表中，就无法访问灰度环境；</p>\n<p>因此，在灰度管理平台中增加了一个默认的号码，当cookie中存在该号码时，将被代理至灰度环境；</p>\n<p>###二维码<br>预览链接通过二维码的方式显示出来，发布人员和审批人员只需要扫描二维码即可预览编辑后的界面；<br>审批管理中的预览：<br><img src=\"/blog/2018/05/30/可视化编辑系统实践/preview.jpg\" alt=\"预览\"></p>\n<p>保存成功后，同样会弹出二维码，提示预览测试：<br><img src=\"/blog/2018/05/30/可视化编辑系统实践/preview2.jpg\" alt=\"预览\"></p>\n<p>有了预览功能，整个工作流就可以形成完整的闭环；<br><img src=\"/blog/2018/05/30/可视化编辑系统实践/workflow.png\" alt=\"工作流\"></p>\n<p>工作流、预览，资源库管理、ftp推送、静态化</p>\n","site":{"data":{}},"excerpt":"","more":"<p>这篇我想写写可视化编辑系统的实践，重点在数据模型，静态化，工作流，预览等一系列系统功能的实践上，具体的可视化编辑功能，将另开一贴来介绍；</p>\n<h2 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h2><p>前端工程中，有一些页面涉及运营位，根据市场的变化以及运营的要求，需要频繁的更迭，开发人员需要频繁的修改上线；由于生产环境的安全限制，手动上线费时费力，还需要走更多的流程（打申请，写文档，等审批），占用了大量的时间确不能产生多少价值；</p>\n<h2 id=\"CMS\"><a href=\"#CMS\" class=\"headerlink\" title=\"CMS\"></a>CMS</h2><p>传统的解决方案就是采用内容管理平台，运营人员通过CMS来修改，发布内容，包括文字，图片，表格等等一切想要发布的信息；CMS系统把数据和模板结合起来，静态化生成HTML页面或代码块，通过ftp协议上传到前端应用中，供项目使用；</p>\n<p>CMS解决了2个问题：<br>1、没有技术门槛，运营人员可通过界面操作来修改运营位内容；<br>2、不需要手动上线，ftp一键上传；也省去了复杂的上线流程；</p>\n<p>使用CMS系统，解放了开发人员一部分时间，迭代效率提升不少；</p>\n<p>CMS系统已经向前迈了一大步，但仍存在不少问题：<br>1、比较笨重，有一定的门槛，需要有一个熟练的操作人员；<br>2、CMS一般有复杂的数据结构，需要把每一个图片，文字都对应到一个数据库字段中；维护相对困难；<br>3、有一些抽象概念（栏目、内容…）；推广困难（用户有意向主动使用，但培训了多次，效果不佳，一直没有交出去）<br>4、模板复用率低，一旦有结构型的变化，需要开发人员修改模板；</p>\n<p>为了能更方便的进行页面的编辑发布，可视化编辑的方案被提上日志</p>\n<h2 id=\"设计思路\"><a href=\"#设计思路\" class=\"headerlink\" title=\"设计思路\"></a>设计思路</h2><p>最初的想法是复用CMS的数据结构，静态化的部分也可以复用；但这么做需要先把CMS的数据模型梳理出来，并且CMS本身不是前后端分离的架构，接口层需要重新开发；这样rest层需要针对不同的前端场景提供各种接口，多表关联的处理太多，rest层的开发将会非常复杂；还有，本次可视化的要求除了，编辑文字图片外，还要有“楼层”（首页的瀑布式结构）的处理（增加，删除，排序）甚至有“楼中楼”的情况，CMS的数据模型难以表达出楼层概念；</p>\n<p>如果把每一个页面元素都和数据库对应起来的话，整个系统会显得非常笨重，耦合度非常高，难以扩展，前端和后端的都不灵活；因此我们考虑，数据库只存储必要的信息，不记录所有的前端元素，只记录编辑完成的结果；</p>\n<p>前端编辑过程不和后端交互，编辑结束后，将最终的html代码段存储在数据库中，后端根据代码段来静态化生成页面，这样编辑的过程完全有前端工程去处理，这样更灵活也更轻量；</p>\n<p>但是这样做有一个难点：当下一次来编辑时，需要依据html代码块还原成可编辑的模板；之前保存在数据库中的是html代码的字符串，要把它还原成可编辑的模板，非常麻烦；</p>\n<p>为此，我们将可编辑的数据以一个json对象的形式存储在数据库中，下一次编辑时，前端通过json数据，结合VUE组件，渲染出可编辑界面；</p>\n<p>###具体的过程如下：<br>1、管理员访问后台编辑系统时，首先从数据库中查询出默认的json串，这个json串是初始化系统时录入的；前端根据json串，还原出可编辑界面；<br>2、管理员操作可编辑界面，前端记录修改，在保存时，把json串和html代码块一起存储在数据库中；<br>3、后端根据html代码块生成页面，并推送到前端工程使用；</p>\n<p>前端处理json数据，并实现可视化操作，仍需要进行大量的处理，这块的细节可以查看lihao的帖子：<br>xxxxxxxxxxxxxx</p>\n<p>最后决定，除了记录一些页面的固有信息，只存储json数据和html代码块，json用作还原可视化编辑界面，html代码块用来静态化生成页面；</p>\n<h2 id=\"数据模型：\"><a href=\"#数据模型：\" class=\"headerlink\" title=\"数据模型：\"></a>数据模型：</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">id    主键  ,</span><br><span class=\"line\">name   生成页名称  ,</span><br><span class=\"line\">area_code    地市  ,</span><br><span class=\"line\"><span class=\"built_in\">type</span>   类型 1:首页 2:地市专项  ,</span><br><span class=\"line\">json   json数据  ,</span><br><span class=\"line\">code   html代码块  ,</span><br><span class=\"line\">create_time   创建时间  ,</span><br><span class=\"line\">update_time   更新时间  ,</span><br><span class=\"line\">update_login_no   更新操作工号  ,</span><br><span class=\"line\">status   状态(0：编辑完成，1：审批中，2：审批完成，-1：被打回，9：生效，-9：失效)  ,</span><br><span class=\"line\">channels   发布渠道  ,</span><br><span class=\"line\">access_url 静态化页面路径,</span><br><span class=\"line\">remark1   备用字段1  ,</span><br><span class=\"line\">remark2   备用字段2  ,</span><br></pre></td></tr></table></figure>\n<h2 id=\"工作流\"><a href=\"#工作流\" class=\"headerlink\" title=\"工作流\"></a>工作流</h2><p>根据用户的要求，可视化操作需要有审批流程，具体的审批流程是：<br>1、地市发布人员–地市审批人员–省公司审批人员<br>2、省公司发布人员–省公司审批人员<br>并且，不同地市间，审批人员和发布人员不能交叉：<br><img src=\"/blog/2018/05/30/可视化编辑系统实践/approvalProcess.jpg\" alt=\"审批关系图\"></p>\n<p>工作流系统采用，Activity工作流系统</p>\n<p>其中工作流角色，采用基础域中的角色数据模型，分别定义四个角色，地市发布人员，地市审批人员，省公司审批人员和省公司审批人员；</p>\n<p>工作流对接到后台系统中，出现很多特殊的情况：<br>1、不同地市的审批如何避免交叉？<br>2、部分VIP工号要求既有发布权限，又有审批角色，当一个工号存在与统一审批流程中的多个角色中时，如何处理？<br>3、当某个工号同时在多个工作流的角色中时，如何避免在指定下一步审批人时，不会把其他工作流的审批人也展示出来？</p>\n<p>解决这些问题的思路，可以看一下fengchao的帖子：<br>xxxxxxxxxxxxxxxxx</p>\n<p>我这里说一下前端的设计；<br>前端跟工作流相关的有两个模块，一个是发布管理，一个是审批管理<br>发布管理包含6个状态，<br>1、待审批（完成可视化编辑，但未点击“发起审批”，此状态时仍可以修改配置信息）<br>2、审批中（即等待审批的配置信息，提供审批提醒功能）<br>3、被打回 审批不通过的配置信息）<br>4、审批完成（审批通过的配置信息，运营人员可点击“发布”按钮，正式发布）<br>5、已上线（审批通过后，在待发布列表点击发布按钮后，状态变更为已上线）<br>6、已结束（到达活动结束时间或者手动点击“结束活动”的配置信息。此状态下提供“下线”按钮）</p>\n<p>对应在数据库的state   0：编辑完成，1：审批中，2：审批完成，-1：被打回，9：生效，-9：失效</p>\n<p>不同的status，对应着不同的操作，这里是由前端自己来管理，如下图：<br><img src=\"/blog/2018/05/30/可视化编辑系统实践/issue.jpg\" alt=\"发布管理\"></p>\n<p>审批管理：<br>只有在状态为1（审批中）时，这条记录会出现在审批管理中；<br>审批管理提供，预览、打回、通过三个状态，如下图：<br><img src=\"/blog/2018/05/30/可视化编辑系统实践/approval.jpg\" alt=\"审批管理\"></p>\n<p>可以看到，审批管理和发布管理涉及的可操作按钮有：<code>预览</code>，<code>编辑</code>，<code>发起审批</code>，<code>打回</code>，<code>通过</code>，<code>发布</code>，<code>活动下线</code><br>除了预览和编辑，其它操作都会改变status；</p>\n<h2 id=\"预览\"><a href=\"#预览\" class=\"headerlink\" title=\"预览\"></a>预览</h2><p>可视化编辑后，操作人员如何确认自己修改是否生效？审批人员依据什么来确认发布人员的操作是否正确？预览的功能必不可少；</p>\n<p>一般预览的思路是静态化后打开页面查看效果，但是本次可视化系统，编辑后并非完整的页面，只是一段代码块，那么预览就必须要依赖于前端工程；为了预览重新搭建一个前端工程显然不值得，那么灰度环境是个非常好的选择；</p>\n<p>但是前端工程是根据手机号来进行灰度的，如果发布人员和审批人员的手机号不在配置列表中，就无法访问灰度环境；</p>\n<p>因此，在灰度管理平台中增加了一个默认的号码，当cookie中存在该号码时，将被代理至灰度环境；</p>\n<p>###二维码<br>预览链接通过二维码的方式显示出来，发布人员和审批人员只需要扫描二维码即可预览编辑后的界面；<br>审批管理中的预览：<br><img src=\"/blog/2018/05/30/可视化编辑系统实践/preview.jpg\" alt=\"预览\"></p>\n<p>保存成功后，同样会弹出二维码，提示预览测试：<br><img src=\"/blog/2018/05/30/可视化编辑系统实践/preview2.jpg\" alt=\"预览\"></p>\n<p>有了预览功能，整个工作流就可以形成完整的闭环；<br><img src=\"/blog/2018/05/30/可视化编辑系统实践/workflow.png\" alt=\"工作流\"></p>\n<p>工作流、预览，资源库管理、ftp推送、静态化</p>\n"},{"title":"gitflow工作流程使用经验","date":"2018-05-15T21:13:21.000Z","_content":"背景：\n---\n公司一直使用svn做版本管控，项目一般只有两个分支，开发区和发布区，开发人员在开发过程中提交代码，然后在测试部署环境，测试通过后将代码同步至发布区，从发布区打包上线到生产环境；\n\n前端项目现在多采用MVVM架构，每次上线需要全量打包，再加上多人协作的场景下，svn的管控模式已经难以满足复杂的场景；\n\n先分析下问题所在：\n---\n1、开发人员多，每个人都在发布区提交代码，发布区的代码经常出现一更新就无法运行，只能先一一排错；同时测试环境沦为鸡肋，因为没有对应的稳定版本；\n2、并行开发的版本多，同时有3个以上的需求在开发，但上线的时间并不一致，导致开发区的代码无法作为测试版本，只能由开发人员自己提交发布区，测试人员在发布区打包上线并测试；发布区沦为测试区；\n3、前端项目无法增量上线，每次上线需要发布人全量打包，发布区版本由发布人员认为管控，上线日需要多次打包测试；\n\n因此我们考虑引入gitLab作为版本管理工具，对开发上线流程进行管理；\n\nGitflow\n---\nGitflow工作流通过为功能开发, 发布准备和维护分配独立的分支, 让发布迭代过程更流畅. 严格的分支模型也为大型项目提供了一些非常必要的结构. \nGitflow工作流没有用超出功能分支工作流的概念和命令, 而是为不同的分支分配一个很明确的角色, 并定义分支之间如何和什么时候进行交互.\n![avatar](gitflow工作流程使用经验/gitflow.png)\n\n主要分支:\n* Master(绿色): 永远处在 production-ready 状态；\n* Develop(橙色): 最新的下次发布开发状态；\n\n辅助分支:\n* Feature(蓝色): 开发新功能都从 develop 分支新建出来，完成后合并（merge）回 develop分支\n* Release(黄色): 准备要 release 的版本，只修 bugs。从 develop 分支出来，完成后 merge 回 master 和 develop\n* Hotfix(灰色): 等不及 release 版本就必须马上修 master 赶上线的情况。会从 master 分支出来，完成后 merge 回 master 和 develop\n\n结合实际的使用情况，我增加了一些规范：\n1. master分支，需要时刻和生产环境保持一致，develop分支与测试环境保持一致，后期我计划加入持续集成上线的流程，这两个分支完成修改后将自动打包上传至对应环境，保持代码的一致性；\n2. feature分支就是开发人员本地的分支，可以一个人一个分支，也可以多个人公用一个分支，建议按照功能点来新建分支，每个功能是一个分支，开发人员自测要在feature分支完成，自测通过后，merge到develop分支，提交由测试人员测试；\n3. 测试人员在测试环境测试出bug，需要新建release分支，开发人员在release分支修复bug，而后merge回develop分支，测试人员再进行测试；\n4. 测试人员测试通过后，将release分支merge到master分支，进行上线发布；\n5. release分支在merge到master分支时，需要先在master分支打tag，作为历史版本；\n6. 上线后，再次出现bug，需要开发人员在master分支基础上，新建hotfix分支，修复bug，修复后，merge到develop分支测试，测试通过后再merge到master分支，重新上线发布；\n7. 如果上线失败（出现未能解决的bug，或者因为用户层面的原因）发布人员从master分支回退到上一个tag版本，然后执行上线回退；\n\n","source":"_posts/gitflow工作流程使用经验.md","raw":"---\ntitle: 'gitflow工作流程使用经验'\ndate: 2018-05-15 21:13:21\ntags:\n---\n背景：\n---\n公司一直使用svn做版本管控，项目一般只有两个分支，开发区和发布区，开发人员在开发过程中提交代码，然后在测试部署环境，测试通过后将代码同步至发布区，从发布区打包上线到生产环境；\n\n前端项目现在多采用MVVM架构，每次上线需要全量打包，再加上多人协作的场景下，svn的管控模式已经难以满足复杂的场景；\n\n先分析下问题所在：\n---\n1、开发人员多，每个人都在发布区提交代码，发布区的代码经常出现一更新就无法运行，只能先一一排错；同时测试环境沦为鸡肋，因为没有对应的稳定版本；\n2、并行开发的版本多，同时有3个以上的需求在开发，但上线的时间并不一致，导致开发区的代码无法作为测试版本，只能由开发人员自己提交发布区，测试人员在发布区打包上线并测试；发布区沦为测试区；\n3、前端项目无法增量上线，每次上线需要发布人全量打包，发布区版本由发布人员认为管控，上线日需要多次打包测试；\n\n因此我们考虑引入gitLab作为版本管理工具，对开发上线流程进行管理；\n\nGitflow\n---\nGitflow工作流通过为功能开发, 发布准备和维护分配独立的分支, 让发布迭代过程更流畅. 严格的分支模型也为大型项目提供了一些非常必要的结构. \nGitflow工作流没有用超出功能分支工作流的概念和命令, 而是为不同的分支分配一个很明确的角色, 并定义分支之间如何和什么时候进行交互.\n![avatar](gitflow工作流程使用经验/gitflow.png)\n\n主要分支:\n* Master(绿色): 永远处在 production-ready 状态；\n* Develop(橙色): 最新的下次发布开发状态；\n\n辅助分支:\n* Feature(蓝色): 开发新功能都从 develop 分支新建出来，完成后合并（merge）回 develop分支\n* Release(黄色): 准备要 release 的版本，只修 bugs。从 develop 分支出来，完成后 merge 回 master 和 develop\n* Hotfix(灰色): 等不及 release 版本就必须马上修 master 赶上线的情况。会从 master 分支出来，完成后 merge 回 master 和 develop\n\n结合实际的使用情况，我增加了一些规范：\n1. master分支，需要时刻和生产环境保持一致，develop分支与测试环境保持一致，后期我计划加入持续集成上线的流程，这两个分支完成修改后将自动打包上传至对应环境，保持代码的一致性；\n2. feature分支就是开发人员本地的分支，可以一个人一个分支，也可以多个人公用一个分支，建议按照功能点来新建分支，每个功能是一个分支，开发人员自测要在feature分支完成，自测通过后，merge到develop分支，提交由测试人员测试；\n3. 测试人员在测试环境测试出bug，需要新建release分支，开发人员在release分支修复bug，而后merge回develop分支，测试人员再进行测试；\n4. 测试人员测试通过后，将release分支merge到master分支，进行上线发布；\n5. release分支在merge到master分支时，需要先在master分支打tag，作为历史版本；\n6. 上线后，再次出现bug，需要开发人员在master分支基础上，新建hotfix分支，修复bug，修复后，merge到develop分支测试，测试通过后再merge到master分支，重新上线发布；\n7. 如果上线失败（出现未能解决的bug，或者因为用户层面的原因）发布人员从master分支回退到上一个tag版本，然后执行上线回退；\n\n","slug":"gitflow工作流程使用经验","published":1,"updated":"2018-05-31T11:47:00.070Z","_id":"cjhuh5njg0000ckm2yvpa05iu","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"背景：\"><a href=\"#背景：\" class=\"headerlink\" title=\"背景：\"></a>背景：</h2><p>公司一直使用svn做版本管控，项目一般只有两个分支，开发区和发布区，开发人员在开发过程中提交代码，然后在测试部署环境，测试通过后将代码同步至发布区，从发布区打包上线到生产环境；</p>\n<p>前端项目现在多采用MVVM架构，每次上线需要全量打包，再加上多人协作的场景下，svn的管控模式已经难以满足复杂的场景；</p>\n<h2 id=\"先分析下问题所在：\"><a href=\"#先分析下问题所在：\" class=\"headerlink\" title=\"先分析下问题所在：\"></a>先分析下问题所在：</h2><p>1、开发人员多，每个人都在发布区提交代码，发布区的代码经常出现一更新就无法运行，只能先一一排错；同时测试环境沦为鸡肋，因为没有对应的稳定版本；<br>2、并行开发的版本多，同时有3个以上的需求在开发，但上线的时间并不一致，导致开发区的代码无法作为测试版本，只能由开发人员自己提交发布区，测试人员在发布区打包上线并测试；发布区沦为测试区；<br>3、前端项目无法增量上线，每次上线需要发布人全量打包，发布区版本由发布人员认为管控，上线日需要多次打包测试；</p>\n<p>因此我们考虑引入gitLab作为版本管理工具，对开发上线流程进行管理；</p>\n<h2 id=\"Gitflow\"><a href=\"#Gitflow\" class=\"headerlink\" title=\"Gitflow\"></a>Gitflow</h2><p>Gitflow工作流通过为功能开发, 发布准备和维护分配独立的分支, 让发布迭代过程更流畅. 严格的分支模型也为大型项目提供了一些非常必要的结构.<br>Gitflow工作流没有用超出功能分支工作流的概念和命令, 而是为不同的分支分配一个很明确的角色, 并定义分支之间如何和什么时候进行交互.<br><img src=\"/blog/2018/05/16/gitflow工作流程使用经验/gitflow.png\" alt=\"avatar\"></p>\n<p>主要分支:</p>\n<ul>\n<li>Master(绿色): 永远处在 production-ready 状态；</li>\n<li>Develop(橙色): 最新的下次发布开发状态；</li>\n</ul>\n<p>辅助分支:</p>\n<ul>\n<li>Feature(蓝色): 开发新功能都从 develop 分支新建出来，完成后合并（merge）回 develop分支</li>\n<li>Release(黄色): 准备要 release 的版本，只修 bugs。从 develop 分支出来，完成后 merge 回 master 和 develop</li>\n<li>Hotfix(灰色): 等不及 release 版本就必须马上修 master 赶上线的情况。会从 master 分支出来，完成后 merge 回 master 和 develop</li>\n</ul>\n<p>结合实际的使用情况，我增加了一些规范：</p>\n<ol>\n<li>master分支，需要时刻和生产环境保持一致，develop分支与测试环境保持一致，后期我计划加入持续集成上线的流程，这两个分支完成修改后将自动打包上传至对应环境，保持代码的一致性；</li>\n<li>feature分支就是开发人员本地的分支，可以一个人一个分支，也可以多个人公用一个分支，建议按照功能点来新建分支，每个功能是一个分支，开发人员自测要在feature分支完成，自测通过后，merge到develop分支，提交由测试人员测试；</li>\n<li>测试人员在测试环境测试出bug，需要新建release分支，开发人员在release分支修复bug，而后merge回develop分支，测试人员再进行测试；</li>\n<li>测试人员测试通过后，将release分支merge到master分支，进行上线发布；</li>\n<li>release分支在merge到master分支时，需要先在master分支打tag，作为历史版本；</li>\n<li>上线后，再次出现bug，需要开发人员在master分支基础上，新建hotfix分支，修复bug，修复后，merge到develop分支测试，测试通过后再merge到master分支，重新上线发布；</li>\n<li>如果上线失败（出现未能解决的bug，或者因为用户层面的原因）发布人员从master分支回退到上一个tag版本，然后执行上线回退；</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"背景：\"><a href=\"#背景：\" class=\"headerlink\" title=\"背景：\"></a>背景：</h2><p>公司一直使用svn做版本管控，项目一般只有两个分支，开发区和发布区，开发人员在开发过程中提交代码，然后在测试部署环境，测试通过后将代码同步至发布区，从发布区打包上线到生产环境；</p>\n<p>前端项目现在多采用MVVM架构，每次上线需要全量打包，再加上多人协作的场景下，svn的管控模式已经难以满足复杂的场景；</p>\n<h2 id=\"先分析下问题所在：\"><a href=\"#先分析下问题所在：\" class=\"headerlink\" title=\"先分析下问题所在：\"></a>先分析下问题所在：</h2><p>1、开发人员多，每个人都在发布区提交代码，发布区的代码经常出现一更新就无法运行，只能先一一排错；同时测试环境沦为鸡肋，因为没有对应的稳定版本；<br>2、并行开发的版本多，同时有3个以上的需求在开发，但上线的时间并不一致，导致开发区的代码无法作为测试版本，只能由开发人员自己提交发布区，测试人员在发布区打包上线并测试；发布区沦为测试区；<br>3、前端项目无法增量上线，每次上线需要发布人全量打包，发布区版本由发布人员认为管控，上线日需要多次打包测试；</p>\n<p>因此我们考虑引入gitLab作为版本管理工具，对开发上线流程进行管理；</p>\n<h2 id=\"Gitflow\"><a href=\"#Gitflow\" class=\"headerlink\" title=\"Gitflow\"></a>Gitflow</h2><p>Gitflow工作流通过为功能开发, 发布准备和维护分配独立的分支, 让发布迭代过程更流畅. 严格的分支模型也为大型项目提供了一些非常必要的结构.<br>Gitflow工作流没有用超出功能分支工作流的概念和命令, 而是为不同的分支分配一个很明确的角色, 并定义分支之间如何和什么时候进行交互.<br><img src=\"/blog/2018/05/16/gitflow工作流程使用经验/gitflow.png\" alt=\"avatar\"></p>\n<p>主要分支:</p>\n<ul>\n<li>Master(绿色): 永远处在 production-ready 状态；</li>\n<li>Develop(橙色): 最新的下次发布开发状态；</li>\n</ul>\n<p>辅助分支:</p>\n<ul>\n<li>Feature(蓝色): 开发新功能都从 develop 分支新建出来，完成后合并（merge）回 develop分支</li>\n<li>Release(黄色): 准备要 release 的版本，只修 bugs。从 develop 分支出来，完成后 merge 回 master 和 develop</li>\n<li>Hotfix(灰色): 等不及 release 版本就必须马上修 master 赶上线的情况。会从 master 分支出来，完成后 merge 回 master 和 develop</li>\n</ul>\n<p>结合实际的使用情况，我增加了一些规范：</p>\n<ol>\n<li>master分支，需要时刻和生产环境保持一致，develop分支与测试环境保持一致，后期我计划加入持续集成上线的流程，这两个分支完成修改后将自动打包上传至对应环境，保持代码的一致性；</li>\n<li>feature分支就是开发人员本地的分支，可以一个人一个分支，也可以多个人公用一个分支，建议按照功能点来新建分支，每个功能是一个分支，开发人员自测要在feature分支完成，自测通过后，merge到develop分支，提交由测试人员测试；</li>\n<li>测试人员在测试环境测试出bug，需要新建release分支，开发人员在release分支修复bug，而后merge回develop分支，测试人员再进行测试；</li>\n<li>测试人员测试通过后，将release分支merge到master分支，进行上线发布；</li>\n<li>release分支在merge到master分支时，需要先在master分支打tag，作为历史版本；</li>\n<li>上线后，再次出现bug，需要开发人员在master分支基础上，新建hotfix分支，修复bug，修复后，merge到develop分支测试，测试通过后再merge到master分支，重新上线发布；</li>\n<li>如果上线失败（出现未能解决的bug，或者因为用户层面的原因）发布人员从master分支回退到上一个tag版本，然后执行上线回退；</li>\n</ol>\n"}],"PostAsset":[{"_id":"source/_posts/基于vue的管理系统权限管控方案/SequenceDiagram.png","slug":"SequenceDiagram.png","post":"cjhsvk8ej0001j0m2r109eir4","modified":0,"renderable":0},{"_id":"source/_posts/基于vue的管理系统权限管控方案/menu.jpg","slug":"menu.jpg","post":"cjhsvk8ej0001j0m2r109eir4","modified":0,"renderable":0},{"_id":"source/_posts/可视化编辑系统实践/approvalProcess.jpg","slug":"approvalProcess.jpg","post":"cjhsvkzmg0002j0m23at8s36w","modified":0,"renderable":0},{"_id":"source/_posts/可视化编辑系统实践/issue.jpg","slug":"issue.jpg","post":"cjhsvkzmg0002j0m23at8s36w","modified":0,"renderable":0},{"_id":"source/_posts/可视化编辑系统实践/approval.jpg","slug":"approval.jpg","post":"cjhsvkzmg0002j0m23at8s36w","modified":0,"renderable":0},{"_id":"source/_posts/可视化编辑系统实践/preview.jpg","slug":"preview.jpg","post":"cjhsvkzmg0002j0m23at8s36w","modified":0,"renderable":0},{"_id":"source/_posts/可视化编辑系统实践/preview2.jpg","slug":"preview2.jpg","post":"cjhsvkzmg0002j0m23at8s36w","modified":0,"renderable":0},{"_id":"source/_posts/gitflow工作流程使用经验/gitflow.png","slug":"gitflow.png","post":"cjhuh5njg0000ckm2yvpa05iu","modified":0,"renderable":0},{"_id":"source/_posts/可视化编辑系统实践/workflow.png","slug":"workflow.png","post":"cjhsvkzmg0002j0m23at8s36w","modified":0,"renderable":0}],"PostCategory":[],"PostTag":[],"Tag":[]}}